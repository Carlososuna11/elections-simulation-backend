var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.067,1,2.133]],["body/classes/AllExceptionsFilter.html",[0,0.072,1,3.041,2,1.065,3,0.399,4,0.311,5,0.311,6,2.95,7,3.912,8,5.239,9,0.354,10,1.785,11,3.634,12,2.284,13,3.521,14,5.967,15,0.722,16,3.521,17,1.65,18,0.031,19,1.208,20,0.529,21,1.115,22,4.67,23,3.412,24,5.58,25,3.521,26,4.864,27,1.151,28,3.414,29,0.735,30,5.239,31,4.675,32,1.412,33,2.293,34,2.95,35,0.399,36,2.293,37,1.582,38,2.95,39,3.521,40,3.521,41,4.67,42,2.293,43,2.95,44,3.521,45,3.521,46,2.95,47,2.507,48,3.521,49,3.521,50,3.521,51,5.239,52,3.521,53,3.521,54,4.67,55,3.521,56,3.521,57,3.521,58,2.95,59,2.574,60,3.041,61,3.521,62,3.521,63,3.521,64,3.521,65,3.521,66,3.521,67,3.521,68,0.021,69,0.021]],["title/modules/AppModule.html",[70,1.356,71,2.133]],["body/modules/AppModule.html",[0,0.087,1,2.763,3,0.346,4,0.27,5,0.27,18,0.031,23,3.173,26,2.562,29,0.863,32,0.925,33,2.763,35,0.346,47,1.374,68,0.019,69,0.019,70,2.289,71,4.006,72,2.075,73,1.796,74,2.235,75,2.235,76,1.796,77,2.763,78,1.991,79,2.562,80,2.562,81,3.362,82,3.362,83,3.362,84,3.102,85,1.991,86,2.235,87,3.058,88,3.102,89,4.243,90,3.058,91,2.235,92,4.243,93,4.243,94,3.058,95,2.562,96,4.083,97,3.058,98,3.562,99,1.796,100,3.555,101,1.08,102,4.042,103,1.796,104,3.058,105,3.058,106,3.058,107,1.592,108,3.058,109,2.562,110,3.058,111,3.058,112,3.058,113,3.058,114,3.058,115,3.058,116,1.495,117,2.562,118,4.083,119,3.058,120,3.058,121,2.235,122,3.555,123,4.873,124,3.058,125,3.058,126,3.058,127,3.058,128,3.058,129,3.058,130,3.058,131,3.058,132,1.266,133,3.058,134,4.243,135,1.634,136,1.796,137,3.058,138,2.235,139,3.058,140,2.562,141,3.058,142,1,143,2.562]],["title/modules/BaseModule.html",[70,1.356,81,1.924]],["body/modules/BaseModule.html",[0,0.095,3,0.528,4,0.412,5,0.412,18,0.03,29,0.867,32,1.409,35,0.528,68,0.025,69,0.025,70,2.307,72,2.279,81,3.274,88,3.407,144,4.66,145,5.573,146,3.904,147,5.573,148,3.407,149,3.503,150,4.66]],["title/modules/CommonModule.html",[70,1.356,82,1.924]],["body/modules/CommonModule.html",[0,0.086,3,0.475,4,0.371,5,0.371,7,3.515,10,1.604,15,0.649,17,1.482,18,0.03,19,1.085,20,0.475,21,1.002,27,1.371,28,3.821,29,0.733,32,1.269,35,0.475,47,1.885,68,0.024,69,0.024,70,2.164,72,2.052,77,3.707,78,2.732,82,3.071,116,2.556,118,4.77,151,3.067,152,4.195,153,5.226,154,5.959,155,4.195,156,4.195,157,5.226,158,4.162,159,3.515,160,3.067,161,3.515,162,3.515,163,2.465,164,3.515,165,2.052,166,3.515,167,4.195,168,4.195,169,4.195]],["title/injectables/ConfigService.html",[170,1.157,171,2.394]],["body/injectables/ConfigService.html",[0,0.083,3,0.461,4,0.36,5,0.36,9,0.41,10,1.961,15,0.63,17,1.813,18,0.031,19,1.054,20,0.636,21,0.973,27,1.332,29,0.788,32,1.232,35,0.461,47,1.831,68,0.023,69,0.023,91,2.978,99,3.015,107,1.232,116,2.747,132,1.687,142,1.332,170,1.813,171,4.106,172,2.178,173,3.414,174,3.015,175,5.618,176,4.075,177,5.897,178,4.075,179,4.106,180,5.618,181,4.075,182,4.075,183,3.002,184,4.075,185,4.075,186,1.831,187,2.653,188,4.075]],["title/injectables/DataService.html",[170,1.157,189,1.75]],["body/injectables/DataService.html",[0,0.05,3,0.408,4,0.215,5,0.215,9,0.245,10,1.378,12,1.191,15,0.734,17,1.676,18,0.031,19,1.226,20,0.537,21,1.132,27,1.403,29,0.743,32,0.737,35,0.276,36,1.586,37,1.094,47,2.9,60,1.586,68,0.022,69,0.016,101,1.789,107,1.434,121,1.78,132,2.194,135,2.535,136,1.431,142,1.655,165,1.191,170,1.274,172,1.302,189,1.926,190,2.041,191,3.379,192,3.02,193,3.02,194,3.02,195,2.436,196,3.451,197,2.436,198,3.02,199,3.039,200,2.436,201,2.833,202,3.02,203,2.436,204,3.02,205,2.436,206,2.436,207,1.431,208,1.431,209,3.437,210,2.041,211,2.786,212,1.586,213,1.586,214,2.118,215,2.118,216,2.293,217,3.745,218,4.291,219,4.44,220,4.291,221,3.874,222,3.595,223,3.874,224,4.291,225,2.436,226,2.436,227,3.604,228,3.604,229,4.742,230,3.604,231,4.742,232,2.041,233,3.088,234,2.041,235,2.041,236,2.041,237,4.742,238,3.604,239,2.436,240,2.436,241,2.436,242,2.041,243,2.041,244,2.041,245,2.041]],["title/classes/ElectorDto.html",[0,0.067,215,1.924]],["body/classes/ElectorDto.html",[0,0.051,2,0.75,3,0.281,4,0.219,5,0.219,9,0.249,15,0.95,18,0.03,19,0.641,20,0.745,21,1.439,29,0.671,35,0.281,68,0.017,69,0.017,101,2.226,107,0.75,174,2.145,186,2.76,207,1.456,215,2.145,232,3.632,234,3.632,235,3.632,236,3.632,246,2.076,247,0.803,248,3.632,249,3.632,250,2.669,251,2.669,252,2.669,253,2.317,254,3.169,255,2.669,256,2.669,257,3.169,258,2.556,259,2.17,260,3.283,261,2.339,262,2.669,263,2.145,264,2.478,265,2.478,266,2.478,267,2.396,268,5.659,269,3.059,270,2.478,271,3.059,272,2.478,273,2.408,274,2.669,275,2.478,276,3.059,277,2.478,278,1.812,279,4.137,280,2.076,281,2.076,282,1.614,283,1.812,284,2.076,285,1.325,286,2.076,287,2.145,288,2.076,289,1.812,290,2.378,291,2.076,292,1.812,293,2.076,294,1.212,295,2.076,296,2.478,297,2.076,298,2.478,299,0.876,300,1.743]],["title/classes/EnrolledSemester.html",[0,0.067,258,1.75]],["body/classes/EnrolledSemester.html",[0,0.09,2,0.977,3,0.366,4,0.285,5,0.285,9,0.325,15,0.9,18,0.03,20,0.744,29,0.618,35,0.366,68,0.02,69,0.02,107,1.332,247,0.969,253,2.355,258,2.355,259,2.056,260,3.11,261,2.154,262,3.938,263,3.561,267,2.42,285,2.355,298,2.676,299,1.141,300,1.902,301,2.705,302,3.665,303,3.665,304,5.014,305,5.014,306,4.201,307,3.665,308,3.229,309,4.119,310,3.22,311,3.22,312,3.229,313,2.677,314,3.691,315,3.229,316,3.691,317,4.405,318,3.229,319,3.229,320,2.869,321,3.229,322,1.897,323,1.337]],["title/controllers/HealthController.html",[324,1.924,325,2.394]],["body/controllers/HealthController.html",[0,0.086,3,0.474,4,0.37,5,0.37,9,0.421,10,1.994,15,0.647,18,0.031,27,1.368,29,0.732,32,1.265,35,0.474,36,2.725,68,0.024,69,0.024,116,2.781,122,4.988,142,1.368,148,3.059,149,2.458,191,3.498,201,3.039,259,1.478,300,1.368,324,3.065,325,3.814,326,3.506,327,5.218,328,4.184,329,4.184,330,5.218,331,4.184,332,5.218,333,4.184,334,5.218,335,4.184,336,3.059,337,3.506,338,4.184,339,4.184,340,4.184,341,4.184]],["title/injectables/JsonDataService.html",[170,1.157,196,2.133]],["body/injectables/JsonDataService.html",[0,0.08,3,0.444,4,0.346,5,0.346,9,0.394,10,1.914,11,2.553,15,0.775,18,0.031,27,1.282,29,0.816,32,1.186,35,0.444,37,2.479,47,1.762,60,2.553,68,0.023,69,0.023,101,1.385,109,3.285,116,1.917,132,1.623,142,1.282,170,1.77,172,2.095,179,2.866,183,2.095,187,2.553,191,3.242,196,3.261,201,2.677,207,2.303,217,2.553,247,1.102,323,1.623,336,4.034,342,3.285,343,5.814,344,5.814,345,3.921,346,5.008,347,5.008,348,3.921,349,3.921,350,3.921,351,3.285,352,3.921,353,2.866,354,3.921,355,3.921,356,3.921,357,3.285,358,3.921,359,3.921,360,3.921,361,3.921,362,3.921,363,3.921,364,3.285,365,3.921]],["title/classes/Major.html",[0,0.067,265,1.471]],["body/classes/Major.html",[0,0.076,2,0.772,3,0.289,4,0.225,5,0.225,9,0.257,15,0.927,18,0.03,20,0.749,29,0.618,35,0.289,68,0.017,69,0.017,101,1.318,107,1.128,186,1.146,247,0.821,248,3.693,253,1.993,258,3.05,259,2.118,260,3.204,261,2.372,262,3.545,263,3.352,265,2.564,267,2.179,273,2.181,274,2.726,285,1.993,287,2.191,290,2.429,298,2.724,299,0.902,300,1.959,302,3.222,303,3.222,307,3.222,309,3.948,310,2.726,311,2.726,313,2.642,314,4.515,320,2.429,322,1.499,323,1.056,366,2.138,367,4.408,368,3.222,369,4.408,370,3.693,371,4.408,372,4.408,373,4.322,374,4.849,375,2.551,376,3.73,377,2.551,378,3.73,379,2.551,380,2.551,381,2.551,382,3.73,383,2.551,384,2.551,385,3.73,386,2.551,387,2.551,388,2.551,389,2.551,390,2.551]],["title/classes/PageDto.html",[0,0.067,208,1.924]],["body/classes/PageDto.html",[0,0.102,2,1.171,3,0.438,4,0.342,5,0.342,9,0.389,12,1.893,15,0.849,17,1.368,18,0.031,19,1.001,20,0.655,21,0.924,29,0.769,35,0.438,37,2.751,68,0.023,69,0.023,107,1.503,208,2.919,209,3.705,216,3.199,247,1.093,259,1.755,298,2.465,299,1.368,391,3.244,392,4.055,393,3.632,394,3.516,395,4.968,396,3.872,397,3.872,398,3.872,399,5.486,400,2.83,401,2.275,402,3.872,403,2.83,404,3.872]],["title/classes/PageMetaDto.html",[0,0.067,209,1.924]],["body/classes/PageMetaDto.html",[0,0.069,2,1.015,3,0.38,4,0.296,5,0.296,9,0.337,12,2.211,15,0.93,17,1.185,18,0.031,19,0.867,20,0.681,21,0.801,29,0.634,35,0.38,37,2.94,68,0.021,69,0.021,199,1.64,209,2.656,221,3.738,222,2.81,223,4.176,247,0.995,259,2.079,267,2.458,298,2.878,299,1.185,313,2.532,401,3.004,405,4.47,406,2.81,407,3.738,408,4.284,409,5.113,410,3.354,411,3.563,412,4.521,413,3.354,414,3.354,415,3.354,416,3.354,417,3.354,418,2.81,419,3.33,420,3.354,421,3.787,422,3.354,423,3.354,424,3.354,425,2.452,426,1.64,427,2.452]],["title/interfaces/PageMetaDtoParameters.html",[411,2.133,428,2.133]],["body/interfaces/PageMetaDtoParameters.html",[3,0.521,4,0.407,5,0.407,9,0.463,18,0.03,20,0.627,29,0.646,35,0.521,68,0.025,69,0.025,136,2.705,199,3.188,223,4.498,247,1.218,313,2.456,392,2.999,411,3.603,418,3.858,428,2.999,429,3.858,430,3.858,431,4.605]],["title/classes/PageOptionsDto.html",[0,0.067,199,1.602]],["body/classes/PageOptionsDto.html",[0,0.104,2,0.993,3,0.372,4,0.29,5,0.29,9,0.33,15,0.839,18,0.031,20,0.662,21,1.396,29,0.761,35,0.372,37,2.772,68,0.02,69,0.02,142,1.073,183,2.703,199,2.179,219,4.237,221,3.697,247,0.981,259,1.787,299,1.16,313,2.476,322,1.929,323,2.554,400,2.4,401,2.971,405,4.145,419,2.138,421,2.751,426,2.976,432,2.751,433,5.098,434,4.456,435,5.058,436,3.284,437,3.284,438,3.284,439,4.456,440,3.284,441,3.284,442,3.697,443,3.257,444,3.257,445,3.284,446,3.284,447,3.284,448,3.284,449,5.424,450,3.284,451,5.058,452,5.424,453,3.284,454,3.284,455,3.284,456,3.284,457,3.284,458,4.456,459,4.456,460,3.284]],["title/classes/PaginatedResult.html",[0,0.067,461,2.133]],["body/classes/PaginatedResult.html",[0,0.061,2,0.575,3,0.215,4,0.168,5,0.168,9,0.191,10,1.141,12,1.802,15,0.891,17,0.672,18,0.031,19,0.492,20,0.621,21,1.082,23,3.133,27,1.644,35,0.338,42,2.399,68,0.014,69,0.014,107,1.114,132,1.236,135,1.596,138,4.261,142,1.204,163,3.384,174,1.754,216,3.404,233,2.399,247,0.657,261,2.353,267,1.875,273,2.201,279,3.517,300,0.976,313,2.682,393,2.182,394,2.956,401,3.8,403,1.391,407,3.051,408,3.087,419,1.944,425,1.391,426,1.46,427,1.391,443,3.051,461,2.718,462,1.391,463,3.799,464,2.501,465,2.501,466,4.031,467,2.501,468,3.639,469,2.182,470,3.087,471,2.693,472,4.592,473,4.085,474,4.364,475,3.496,476,3.496,477,1.903,478,2.501,479,3.799,480,3.496,481,4.007,482,3.496,483,3.517,484,4.031,485,2.501,486,1.903,487,2.501,488,1.903,489,2.501,490,1.903,491,1.903,492,1.903,493,1.903,494,1.903,495,1.903,496,1.903,497,3.496,498,1.903,499,1.903,500,3.087,501,3.087,502,1.903,503,1.594,504,1.391,505,2.501,506,2.501,507,3.314,508,1.391,509,1.594,510,1.594,511,1.594,512,1.594,513,1.594,514,1.594,515,2.501,516,2.182,517,2.501,518,1.594,519,1.594]],["title/classes/Pagination.html",[0,0.067,468,2.133]],["body/classes/Pagination.html",[0,0.073,2,0.723,3,0.271,4,0.211,5,0.211,9,0.24,12,1.169,15,0.814,18,0.031,20,0.617,21,1.122,23,2.764,27,1.387,35,0.403,42,1.557,68,0.016,69,0.016,107,0.723,132,0.99,135,1.9,138,4.183,142,1.387,163,3.362,174,1.405,216,3.397,233,1.557,247,0.782,261,2.298,267,1.597,273,2.187,300,0.781,313,2.666,393,1.748,394,2.951,401,3.773,403,1.748,407,1.748,419,2.315,425,1.748,426,1.739,427,1.748,443,3.102,461,2.315,462,1.748,463,3.556,464,2.003,465,2.003,466,4.208,467,2.003,468,3.271,469,1.748,470,2.003,471,1.748,472,4.692,473,3.985,474,4.41,475,2.003,476,2.003,478,2.003,479,3.937,480,3.556,481,3.985,482,3.556,483,3.435,484,3.937,485,2.003,487,2.003,489,2.003,497,2.978,500,2.003,501,2.003,503,2.003,504,1.748,505,2.978,506,2.978,507,3.672,508,1.748,509,2.003,510,2.003,511,2.003,512,2.003,513,2.003,514,2.003,515,2.978,516,2.599,517,2.978,518,2.003,519,2.003,520,2.391,521,2.391,522,2.391,523,2.391,524,2.391,525,2.391,526,2.391]],["title/classes/PostulantDto.html",[0,0.067,214,1.924]],["body/classes/PostulantDto.html",[0,0.051,2,0.752,3,0.282,4,0.22,5,0.22,9,0.25,15,0.951,18,0.03,19,0.643,20,0.745,21,1.44,29,0.672,35,0.282,68,0.017,69,0.017,101,2.227,107,0.752,174,2.15,186,2.761,207,1.461,214,2.15,242,3.638,243,3.638,244,3.638,245,3.638,247,0.805,249,3.638,250,2.675,251,2.675,252,2.675,253,2.321,254,3.174,255,2.675,256,2.675,257,3.174,259,2.171,260,3.284,261,1.79,265,2.48,267,2.399,269,3.066,271,3.066,273,2.409,274,2.675,276,3.066,278,1.817,279,4.141,280,2.083,281,2.083,282,1.619,283,1.817,284,2.083,285,1.329,286,2.083,287,2.15,288,2.083,289,1.817,290,2.383,291,2.083,292,1.817,293,2.083,294,2.7,295,2.083,297,2.083,298,2.48,299,0.879,300,1.745,527,2.083,528,4.343,529,5.664,530,2.486,531,2.486,532,2.486,533,2.486,534,2.486,535,3.066,536,2.486,537,2.486]],["title/injectables/RequestService.html",[170,1.157,538,2.394]],["body/injectables/RequestService.html",[0,0.087,3,0.483,4,0.377,5,0.377,9,0.429,10,2.018,12,2.085,15,0.817,17,1.507,18,0.03,19,1.103,20,0.483,21,1.018,27,1.394,29,0.804,32,1.29,33,2.777,35,0.483,37,1.916,68,0.024,69,0.024,102,4.737,103,2.505,142,1.394,143,3.573,170,1.866,172,2.279,336,3.117,538,3.859,539,3.573,540,5.993,541,4.264,542,4.264,543,4.264,544,5.28,545,4.264,546,4.264,547,4.264]],["title/classes/Sanction.html",[0,0.067,294,1.602]],["body/classes/Sanction.html",[0,0.1,2,1.145,3,0.429,4,0.334,5,0.334,9,0.381,15,0.84,18,0.03,20,0.734,21,1.169,29,0.687,35,0.429,68,0.022,69,0.022,107,1.481,186,1.702,247,1.078,253,2.618,259,1.918,260,2.901,273,2.194,285,2.618,294,3.07,298,2.579,299,1.338,300,1.774,303,3.968,307,3.968,309,4.221,310,3.58,311,2.768,320,3.189,322,2.225,323,1.568,548,3.173,549,5.428,550,3.787,551,3.787,552,3.787,553,3.787]],["title/classes/Student.html",[0,0.067,101,1.157]],["body/classes/Student.html",[0,0.061,2,0.905,3,0.339,4,0.264,5,0.264,9,0.301,15,0.921,18,0.03,19,1.081,20,0.744,29,0.676,35,0.339,68,0.019,69,0.019,101,2.263,107,1.264,186,1.878,247,0.92,250,3.522,251,3.522,252,3.522,253,2.932,254,4.011,255,3.522,256,3.522,257,4.011,259,2.103,260,3.181,265,2.343,273,2.511,278,3.056,282,2.722,283,3.056,285,2.234,287,3.064,289,3.056,290,3.396,292,3.056,294,2.55,298,2.717,299,1.058,300,1.945,323,1.239,554,2.508,555,2.993,556,2.993,557,2.993,558,2.993,559,2.993,560,2.993,561,2.993,562,2.993,563,2.993,564,2.993]],["title/controllers/StudentsController.html",[324,1.924,565,2.133]],["body/controllers/StudentsController.html",[0,0.037,3,0.204,4,0.159,5,0.539,9,0.181,10,1.094,11,1.864,15,0.683,17,1.561,18,0.031,19,1.142,20,0.596,21,1.055,27,1.444,29,0.786,31,1.511,32,0.545,34,1.511,35,0.204,36,1.174,37,0.81,47,2.297,68,0.013,69,0.013,101,0.637,103,1.06,107,0.866,116,2.3,132,1.947,135,1.53,136,1.06,140,3.394,142,1.163,149,1.06,165,1.74,186,1.286,187,1.864,189,1.53,191,3.423,192,2.398,193,2.398,194,2.398,198,1.511,199,2.878,201,2.884,202,1.511,204,1.511,207,1.06,208,1.06,210,1.511,211,1.681,212,2.317,213,2.317,214,1.06,215,1.06,216,1.53,217,1.864,233,1.864,247,0.63,259,1.561,273,1.094,282,1.864,287,2.091,299,0.637,300,1.537,324,1.06,353,2.092,426,1.981,442,2.092,565,1.864,566,1.511,567,3.558,568,3.558,569,1.803,570,1.803,571,1.803,572,1.803,573,1.803,574,1.803,575,1.803,576,4.702,577,1.803,578,2.862,579,2.862,580,5.113,581,2.961,582,2.862,583,1.803,584,1.803,585,1.803,586,1.803,587,1.803,588,1.803,589,3.558,590,1.803,591,3.558,592,3.558,593,3.558,594,1.803,595,1.803,596,1.803,597,1.803,598,1.318,599,1.511,600,1.318,601,1.803,602,3.558,603,1.803,604,3.558,605,1.803,606,1.318,607,1.511,608,1.803,609,1.803,610,1.803,611,3.558,612,1.803,613,1.803,614,1.803,615,1.803,616,1.803,617,1.511,618,3.558,619,3.558,620,1.803,621,1.803,622,1.511,623,1.803,624,1.803,625,1.803,626,1.511,627,1.803,628,1.803,629,1.803,630,1.803,631,2.862,632,2.862,633,2.862,634,2.398,635,2.862,636,2.862,637,2.862,638,2.862,639,1.803,640,2.398,641,4.051,642,4.051,643,4.051,644,4.702,645,4.051,646,4.051,647,2.862,648,2.862,649,2.862,650,2.862,651,2.862,652,2.862,653,2.862,654,2.398,655,2.862,656,2.862,657,2.862,658,4.051,659,2.862,660,2.862,661,2.862,662,4.051,663,2.862,664,2.862,665,3.394,666,2.862,667,2.862,668,2.862,669,2.862,670,1.803,671,1.803]],["title/modules/StudentsModule.html",[70,1.356,83,1.924]],["body/modules/StudentsModule.html",[0,0.087,3,0.48,4,0.375,5,0.375,18,0.03,29,0.839,32,1.283,35,0.48,68,0.024,69,0.024,70,2.368,72,2.074,73,2.492,74,3.1,75,3.1,76,2.492,77,3.726,78,2.762,83,3.682,84,3.846,85,2.762,86,3.1,88,3.1,103,2.492,149,3.091,189,3.35,565,3.726,598,3.1,599,3.553,672,3.553,673,3.553,674,4.241,675,4.241,676,4.241,677,4.241,678,4.241,679,4.241]],["title/injectables/UtilService.html",[170,1.157,680,2.394]],["body/injectables/UtilService.html",[0,0.06,3,0.332,4,0.259,5,0.259,9,0.295,10,1.575,15,0.842,17,2.092,18,0.031,19,1.408,20,0.681,21,1.3,27,1.689,29,0.411,32,0.886,35,0.332,38,3.452,68,0.019,69,0.019,116,3.106,142,1.689,161,2.456,162,2.456,163,1.722,164,3.991,165,1.433,166,2.456,170,1.456,172,1.567,183,2.546,186,1.317,273,2.331,323,1.213,394,3.685,504,3.011,507,4.507,581,3.777,680,3.011,681,2.143,682,4.12,683,4.12,684,4.12,685,4.12,686,2.931,687,4.329,688,4.12,689,6.018,690,4.859,691,2.931,692,4.764,693,4.12,694,2.931,695,4.12,696,2.931,697,2.931,698,3.452,699,4.12,700,4.764,701,2.931,702,4.764,703,2.931,704,2.931,705,2.143,706,2.931,707,2.931,708,2.931,709,4.12,710,2.931,711,2.456,712,2.931,713,2.931,714,2.931]],["title/coverage.html",[715,3.251]],["body/coverage.html",[0,0.125,1,1.724,5,0.234,6,2.218,18,0.031,20,0.3,68,0.017,69,0.017,76,2.251,98,1.935,99,2.899,101,0.935,132,1.096,136,1.555,151,1.935,158,1.935,160,1.935,170,1.85,171,1.935,173,2.218,189,1.415,190,2.218,196,1.724,199,1.294,208,1.555,209,1.555,214,1.555,215,1.555,246,2.218,258,1.415,263,1.555,265,1.721,294,1.294,301,2.218,324,2.251,325,1.935,326,2.218,342,2.218,366,2.218,368,1.935,391,2.218,392,1.724,405,2.8,406,2.218,411,1.724,428,1.724,429,2.218,430,2.218,432,2.218,444,1.935,461,1.724,462,2.8,468,1.724,527,2.218,538,1.935,539,2.218,548,2.218,554,2.218,565,1.724,566,2.218,600,1.935,606,1.935,680,1.935,681,1.935,705,4.869,715,1.935,716,2.647,717,2.647,718,2.647,719,4.36,720,5.965,721,2.218,722,6.474,723,2.218,724,2.218,725,2.218,726,2.218,727,6.293,728,2.218,729,2.218,730,2.218,731,2.218,732,5.235,733,4.502,734,2.647,735,2.218,736,2.647,737,4.502,738,4.934,739,2.647,740,3.831,741,3.209,742,2.218,743,2.218,744,2.8,745,2.218,746,2.647,747,2.647,748,3.209,749,2.218,750,2.218,751,2.218,752,2.218,753,2.218,754,2.647,755,2.647,756,2.647,757,2.218,758,3.831,759,2.647,760,2.218,761,2.218,762,2.647,763,2.647]],["title/dependencies.html",[73,2.311,764,2.3]],["body/dependencies.html",[0,0.108,18,0.031,32,1.279,33,2.754,68,0.024,69,0.024,73,2.485,91,3.092,95,3.544,96,3.544,103,2.485,146,3.544,148,3.092,165,2.068,211,2.485,212,2.754,213,2.754,299,1.494,322,2.485,400,3.092,598,3.092,765,4.23,766,4.23,767,4.23,768,4.23,769,5.714,770,4.23,771,4.23,772,4.23,773,4.23,774,4.23,775,4.23,776,4.23,777,4.23,778,4.23,779,4.23,780,4.23,781,4.23,782,4.23,783,4.23,784,4.23,785,4.23,786,4.23,787,4.23,788,4.23,789,4.23,790,4.23,791,4.23,792,4.23,793,4.23,794,4.23]],["title/miscellaneous/enumerations.html",[795,1.234,796,3.295]],["body/miscellaneous/enumerations.html",[9,0.287,18,0.031,20,0.323,43,2.393,58,2.393,59,2.088,60,1.86,68,0.018,69,0.018,85,1.86,102,2.957,117,2.393,183,3.601,316,3.935,337,2.393,433,3.389,469,2.088,607,3.389,654,2.393,795,1.283,796,2.393,797,2.856,798,2.856,799,2.856,800,4.045,801,2.856,802,2.856,803,2.856,804,4.045,805,2.856,806,2.856,807,2.856,808,4.045,809,4.045,810,4.045,811,2.856,812,2.856,813,2.856,814,2.856,815,4.696,816,2.856,817,2.856,818,2.856,819,4.045,820,2.856,821,2.856,822,2.856,823,4.696,824,2.856,825,2.856,826,2.856,827,2.856,828,2.856,829,2.856,830,4.045,831,2.856,832,2.856,833,2.856,834,4.045,835,4.045,836,2.856,837,2.856,838,5.108,839,4.045,840,2.856,841,2.856,842,2.856,843,2.856,844,2.856,845,2.856,846,2.856,847,2.856,848,4.045,849,4.045,850,4.045,851,2.856,852,2.856,853,2.856,854,4.045,855,2.856,856,2.856,857,2.856,858,2.856,859,2.856,860,2.856,861,2.856,862,2.856,863,2.856,864,2.856,865,2.856,866,2.856,867,2.856,868,2.856,869,2.856,870,2.856,871,2.856,872,2.856,873,4.045,874,2.856,875,2.856,876,2.856,877,2.856,878,2.856,879,2.856,880,2.856,881,2.856,882,2.856,883,2.856,884,2.856,885,2.856,886,2.856,887,4.045,888,2.856,889,2.856,890,2.856,891,2.856,892,2.393,893,2.856,894,2.856,895,4.045,896,4.045]],["title/miscellaneous/functions.html",[795,1.234,897,3.295]],["body/miscellaneous/functions.html",[9,0.373,17,2.011,18,0.03,19,1.472,20,0.645,21,1.359,27,2.066,28,2.709,68,0.022,69,0.022,76,3.556,101,1.309,160,3.53,201,2.871,258,1.981,265,1.665,267,2.17,294,1.812,302,3.53,306,3.105,309,3.145,313,2.356,719,2.709,721,4.046,723,4.046,724,4.501,725,4.501,726,4.501,730,3.105,731,3.105,744,2.709,745,4.501,757,3.105,760,3.105,761,4.046,795,1.665,897,3.105,898,3.706,899,3.706,900,4.945,901,3.706,902,3.105,903,3.706,904,3.706,905,3.706,906,3.706,907,3.706,908,3.706,909,3.706,910,3.706,911,3.706,912,4.829,913,3.706,914,5.903,915,4.046,916,3.706,917,3.706]],["title/index.html",[9,0.276,918,2.746,919,2.746]],["body/index.html",[4,0.352,18,0.03,46,3.344,59,2.917,68,0.023,69,0.023,165,1.952,300,1.305,320,2.599,351,3.344,715,2.917,915,3.344,920,3.991,921,3.991,922,5.065,923,3.991,924,3.991,925,3.991,926,3.991,927,3.991,928,5.564,929,3.991,930,3.344,931,3.991,932,6.27,933,3.991,934,3.344,935,6.172,936,3.991,937,5.065,938,3.991,939,3.344,940,3.991,941,3.991,942,5.065,943,5.065,944,3.991,945,3.991,946,3.991,947,5.065,948,5.065,949,3.991,950,3.991,951,3.991,952,3.991,953,3.991,954,3.344,955,3.991,956,3.991,957,3.991,958,3.991,959,3.991,960,3.991,961,3.991,962,3.991,963,3.991,964,3.991,965,3.991,966,3.991,967,3.991,968,3.991,969,3.991,970,3.344]],["title/modules.html",[72,2.175]],["body/modules.html",[18,0.026,42,3.743,68,0.026,69,0.026,71,3.198,72,2.401,81,2.885,82,2.885,83,2.885,954,4.816,971,5.748,972,5.748,973,6.284,974,5.748]],["title/overview.html",[975,3.727]],["body/overview.html",[2,1.345,18,0.029,68,0.025,69,0.025,70,1.841,71,4.218,72,2.175,73,2.613,74,3.251,75,3.251,76,2.613,77,2.896,78,2.896,79,3.726,80,3.726,81,3.433,82,3.433,83,3.662,84,3.96,85,2.896,86,3.251,149,2.613,172,2.377,189,3.123,426,2.175,428,2.896,672,3.726,673,3.726,975,3.726,976,3.726,977,3.726,978,3.726,979,4.447]],["title/properties.html",[247,0.865,764,2.3]],["body/properties.html",[15,0.717,18,0.03,68,0.025,69,0.025,165,2.716,211,3.262,212,3.017,213,4.106,247,1.019,300,1.514,364,4.652,634,3.881,892,3.881,930,3.881,970,3.881,980,4.632,981,4.632,982,4.632,983,4.632,984,5.553,985,4.632,986,4.632,987,4.632,988,4.632,989,4.632,990,4.632]],["title/miscellaneous/typealiases.html",[795,1.234,991,3.933]],["body/miscellaneous/typealiases.html",[9,0.489,18,0.026,20,0.551,68,0.026,69,0.026,99,3.358,323,2.366,681,3.556,690,4.789,698,4.075,795,2.185,939,4.789,992,4.864,993,6.265,994,4.789,995,4.864,996,4.864]],["title/miscellaneous/variables.html",[795,1.234,997,3.295]],["body/miscellaneous/variables.html",[4,0.197,5,0.197,9,0.134,11,1.453,18,0.031,19,1.604,20,0.691,47,2.191,68,0.01,69,0.01,98,1.632,99,2.865,100,1.114,121,0.972,132,1.194,135,2.798,142,1.23,151,0.972,158,1.632,159,1.114,163,0.782,179,1.632,183,3.472,187,1.453,191,1.694,201,0.711,211,1.311,216,1.541,217,2.957,247,0.743,261,0.651,263,3.014,265,1.003,273,1.961,313,1.398,323,2.271,353,1.632,357,2.416,368,1.632,370,4.654,373,5.023,392,0.866,394,1.984,426,1.651,442,0.972,444,0.972,471,0.972,473,0.972,481,2.75,483,0.972,508,2.468,516,0.972,535,1.114,581,0.972,600,1.632,606,1.632,617,1.114,622,1.114,626,1.114,640,1.87,665,1.87,687,1.114,705,1.632,711,1.114,719,0.972,728,1.87,729,1.87,735,1.114,741,1.114,742,1.87,743,1.87,744,0.972,748,1.114,749,1.87,750,1.114,751,1.114,752,1.114,753,1.114,795,0.598,900,3.152,902,1.114,934,1.114,976,4.086,977,2.829,978,4.464,994,1.114,997,1.114,998,1.33,999,1.33,1000,1.33,1001,1.33,1002,2.232,1003,2.232,1004,1.33,1005,1.33,1006,1.33,1007,1.33,1008,1.33,1009,1.33,1010,3.762,1011,1.33,1012,1.33,1013,1.33,1014,1.33,1015,1.33,1016,1.33,1017,1.33,1018,1.33,1019,1.33,1020,1.33,1021,1.33,1022,3.376,1023,1.33,1024,1.33,1025,2.884,1026,2.884,1027,2.884,1028,2.884,1029,1.33,1030,2.232,1031,1.33,1032,1.33,1033,1.33,1034,1.33,1035,1.33,1036,1.33,1037,1.33,1038,2.232,1039,1.33,1040,1.33,1041,1.33,1042,2.232,1043,1.33,1044,1.33,1045,1.33,1046,1.33,1047,1.33,1048,1.33,1049,1.33,1050,3.376,1051,1.33,1052,1.33,1053,2.232,1054,1.33,1055,2.232,1056,1.33,1057,1.33,1058,2.884,1059,1.33,1060,1.33,1061,2.232,1062,1.33,1063,1.33,1064,1.33,1065,3.376,1066,1.33,1067,1.33,1068,1.33,1069,1.33,1070,1.33,1071,1.33,1072,2.884,1073,1.33,1074,1.33,1075,1.33,1076,1.33,1077,3.376,1078,1.33,1079,1.33,1080,3.762,1081,1.33,1082,1.33,1083,1.33,1084,1.33,1085,1.33,1086,1.33,1087,1.33,1088,1.33,1089,1.33,1090,1.33,1091,3.762,1092,1.33,1093,1.33,1094,1.33,1095,1.33,1096,1.33,1097,1.33,1098,1.33,1099,1.33,1100,1.33,1101,1.33,1102,1.33,1103,3.762,1104,1.33,1105,1.33,1106,1.33,1107,1.33,1108,1.33,1109,1.33,1110,1.33,1111,1.33,1112,1.33,1113,1.33,1114,1.33,1115,1.33,1116,1.33,1117,1.33,1118,1.33,1119,1.33,1120,1.33,1121,1.33,1122,4.877,1123,1.33,1124,1.33,1125,1.33,1126,1.33,1127,1.33,1128,1.33,1129,1.33,1130,1.33,1131,1.33,1132,1.33,1133,2.232,1134,2.232,1135,1.33,1136,1.33,1137,2.232,1138,2.232,1139,1.33,1140,1.33,1141,1.33,1142,1.33,1143,1.33,1144,1.33,1145,1.33,1146,1.33,1147,1.33]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"controllers/HealthController.html":{},"injectables/JsonDataService.html":{},"classes/Major.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"injectables/RequestService.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/UtilService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":705,"title":{},"body":{"injectables/UtilService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["0.19.3.tgz",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["0.19.3/xlsx",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":739,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":759,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":426,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"controllers/StudentsController.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":980,"title":{},"body":{"properties.html":{}}}],["1.0.7",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":442,"title":{},"body":{"classes/PageOptionsDto.html":{},"controllers/StudentsController.html":{},"miscellaneous/variables.html":{}}}],["10.0.1",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["1024",{"_index":658,"title":{},"body":{"controllers/StudentsController.html":{}}}],["109",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10})@type(undefined)@isint()@min(1)@max(50)@isoptional",{"_index":445,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["12",{"_index":979,"title":{},"body":{"overview.html":{}}}],["14/14",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["170",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1}&limit=${this.limit",{"_index":506,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["1})@type(undefined)@isint()@min(1)@isoptional",{"_index":440,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["2",{"_index":977,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["204",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["229",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["259",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["297",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":976,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["494734673",{"_index":907,"title":{},"body":{"miscellaneous/functions.html":{}}}],["5",{"_index":978,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["50",{"_index":444,"title":{},"body":{"classes/PageOptionsDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.3.0",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":357,"title":{},"body":{"injectables/JsonDataService.html":{},"miscellaneous/variables.html":{}}}],["8.0.2",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["8.1.4",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.0.0",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["__dirname}/../../../public/engines/elector",{"_index":639,"title":{},"body":{"controllers/StudentsController.html":{}}}],["__dirname}/../../../public/engines/postulant",{"_index":671,"title":{},"body":{"controllers/StudentsController.html":{}}}],["__dirname}/../../public/engines",{"_index":679,"title":{},"body":{"modules/StudentsModule.html":{}}}],["__dirname}/../public",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["abstract",{"_index":503,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["acceptable",{"_index":843,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accepted",{"_index":810,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accessors",{"_index":434,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["actual",{"_index":376,"title":{},"body":{"classes/Major.html":{}}}],["ade",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["administración",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["al",{"_index":360,"title":{},"body":{"injectables/JsonDataService.html":{}}}],["aliases",{"_index":992,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["allowed",{"_index":654,"title":{},"body":{"controllers/StudentsController.html":{},"miscellaneous/enumerations.html":{}}}],["along",{"_index":467,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["amazing",{"_index":955,"title":{},"body":{"index.html":{}}}],["ambiguous",{"_index":819,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["api",{"_index":485,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["api/students",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/students/electors",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/students/electors/upload",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/students/postulants",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/students/postulants/upload",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":602,"title":{},"body":{"controllers/StudentsController.html":{}}}],["apiconsumes",{"_index":603,"title":{},"body":{"controllers/StudentsController.html":{}}}],["apiconsumes('multipart/form",{"_index":631,"title":{},"body":{"controllers/StudentsController.html":{}}}],["apiokresponse",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apipaginatedresponse",{"_index":606,"title":{},"body":{"controllers/StudentsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipaginatedresponse(student",{"_index":619,"title":{},"body":{"controllers/StudentsController.html":{}}}],["apiproperty",{"_index":298,"title":{},"body":{"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"classes/Major.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PostulantDto.html":{},"classes/Sanction.html":{},"classes/Student.html":{}}}],["apiproperty({description",{"_index":260,"title":{},"body":{"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"classes/Major.html":{},"classes/PostulantDto.html":{},"classes/Sanction.html":{},"classes/Student.html":{}}}],["apiproperty({type",{"_index":398,"title":{},"body":{"classes/PageDto.html":{}}}],["apipropertyoptional",{"_index":449,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apipropertyoptional({enum",{"_index":436,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apipropertyoptional({minimum",{"_index":439,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apiresponse",{"_index":604,"title":{},"body":{"controllers/StudentsController.html":{}}}],["apitags",{"_index":605,"title":{},"body":{"controllers/StudentsController.html":{}}}],["apitags('students",{"_index":614,"title":{},"body":{"controllers/StudentsController.html":{}}}],["app",{"_index":915,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app_filter",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["applications",{"_index":927,"title":{},"body":{"index.html":{}}}],["applydecorators",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":71,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approved",{"_index":374,"title":{},"body":{"classes/Major.html":{}}}],["approveduc",{"_index":367,"title":{},"body":{"classes/Major.html":{}}}],["archivo",{"_index":363,"title":{},"body":{"injectables/JsonDataService.html":{}}}],["argumentshost",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["argv",{"_index":697,"title":{},"body":{"injectables/UtilService.html":{}}}],["arq",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arquitectura",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.isarray(value",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asc",{"_index":895,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["async",{"_index":191,"title":{},"body":{"injectables/DataService.html":{},"controllers/HealthController.html":{},"injectables/JsonDataService.html":{},"controllers/StudentsController.html":{},"miscellaneous/variables.html":{}}}],["authentication",{"_index":846,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["author",{"_index":963,"title":{},"body":{"index.html":{}}}],["authoritative",{"_index":813,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["available",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"modules.html":{}}}],["await",{"_index":217,"title":{},"body":{"injectables/DataService.html":{},"injectables/JsonDataService.html":{},"controllers/StudentsController.html":{},"miscellaneous/variables.html":{}}}],["backend#readme",{"_index":985,"title":{},"body":{"properties.html":{}}}],["backend.git",{"_index":990,"title":{},"body":{"properties.html":{}}}],["backend/issues",{"_index":987,"title":{},"body":{"properties.html":{}}}],["backendhost",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backers",{"_index":956,"title":{},"body":{"index.html":{}}}],["bad",{"_index":834,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bad_gateway",{"_index":886,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bad_request",{"_index":833,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["badrequestexception",{"_index":596,"title":{},"body":{"controllers/StudentsController.html":{}}}],["badrequestexception('error",{"_index":667,"title":{},"body":{"controllers/StudentsController.html":{}}}],["bar",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":378,"title":{},"body":{"classes/Major.html":{}}}],["basemodule",{"_index":81,"title":{"modules/BaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules.html":{},"overview.html":{}}}],["being",{"_index":479,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["bin/.../generatefakestudents.ts",{"_index":900,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bin/generatefakestudents.ts",{"_index":719,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["binary",{"_index":635,"title":{},"body":{"controllers/StudentsController.html":{}}}],["boolean",{"_index":267,"title":{},"body":{"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"classes/Major.html":{},"classes/PageMetaDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/StudentsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":973,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":971,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":986,"title":{},"body":{"properties.html":{}}}],["building",{"_index":923,"title":{},"body":{"index.html":{}}}],["business",{"_index":212,"title":{},"body":{"injectables/DataService.html":{},"controllers/StudentsController.html":{},"dependencies.html":{},"properties.html":{}}}],["campus",{"_index":289,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{},"classes/Student.html":{}}}],["candidatecu",{"_index":242,"title":{},"body":{"injectables/DataService.html":{},"classes/PostulantDto.html":{}}}],["candidatedides",{"_index":243,"title":{},"body":{"injectables/DataService.html":{},"classes/PostulantDto.html":{}}}],["candidatefaculty",{"_index":245,"title":{},"body":{"injectables/DataService.html":{},"classes/PostulantDto.html":{}}}],["candidateschool",{"_index":244,"title":{},"body":{"injectables/DataService.html":{},"classes/PostulantDto.html":{}}}],["catch",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/JsonDataService.html":{},"controllers/StudentsController.html":{},"miscellaneous/variables.html":{}}}],["catch(exception",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["cb",{"_index":641,"title":{},"body":{"controllers/StudentsController.html":{}}}],["cb(new",{"_index":649,"title":{},"body":{"controllers/StudentsController.html":{}}}],["cb(null",{"_index":646,"title":{},"body":{"controllers/StudentsController.html":{}}}],["certain",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["check",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["civil",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"classes/Major.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"classes/Sanction.html":{},"classes/Student.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"controllers/HealthController.html":{},"injectables/JsonDataService.html":{},"classes/Major.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"injectables/RequestService.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/UtilService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"classes/Major.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":590,"title":{},"body":{"controllers/StudentsController.html":{}}}],["cluster_appmodule",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_studentsmodule",{"_index":672,"title":{},"body":{"modules/StudentsModule.html":{},"overview.html":{}}}],["cluster_studentsmodule_providers",{"_index":673,"title":{},"body":{"modules/StudentsModule.html":{},"overview.html":{}}}],["code",{"_index":290,"title":{},"body":{"classes/ElectorDto.html":{},"classes/Major.html":{},"classes/PostulantDto.html":{},"classes/Student.html":{}}}],["com",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["command",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commander",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["common",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["common/constants",{"_index":601,"title":{},"body":{"controllers/StudentsController.html":{}}}],["common/dtos",{"_index":210,"title":{},"body":{"injectables/DataService.html":{},"controllers/StudentsController.html":{}}}],["common/providers",{"_index":206,"title":{},"body":{"injectables/DataService.html":{}}}],["common/utils",{"_index":608,"title":{},"body":{"controllers/StudentsController.html":{}}}],["commonmodule",{"_index":82,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["compression",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["comunicación",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["con",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":171,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["configuration",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configure",{"_index":152,"title":{},"body":{"modules/CommonModule.html":{}}}],["configure(consumer",{"_index":153,"title":{},"body":{"modules/CommonModule.html":{}}}],["conflict",{"_index":849,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console",{"_index":61,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["const",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"injectables/JsonDataService.html":{},"controllers/StudentsController.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":455,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["constructor",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"injectables/RequestService.html":{}}}],["constructor(@inject(request",{"_index":546,"title":{},"body":{"injectables/RequestService.html":{}}}],["constructor(data",{"_index":393,"title":{},"body":{"classes/PageDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["constructor(httpadapterhost",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(jsondataservice",{"_index":195,"title":{},"body":{"injectables/DataService.html":{}}}],["constructor(private",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"controllers/HealthController.html":{},"controllers/StudentsController.html":{}}}],["constructor(request",{"_index":541,"title":{},"body":{"injectables/RequestService.html":{}}}],["constructor(undefined",{"_index":410,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["consumer",{"_index":156,"title":{},"body":{"modules/CommonModule.html":{}}}],["consumer.apply().forroutes",{"_index":169,"title":{},"body":{"modules/CommonModule.html":{}}}],["contaduría",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["containing",{"_index":465,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["content",{"_index":815,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["context",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["continue",{"_index":800,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["controller",{"_index":324,"title":{"controllers/HealthController.html":{},"controllers/StudentsController.html":{}},"body":{"controllers/HealthController.html":{},"controllers/StudentsController.html":{},"coverage.html":{}}}],["controller(urls.students.base",{"_index":613,"title":{},"body":{"controllers/StudentsController.html":{}}}],["controllers",{"_index":149,"title":{},"body":{"modules/BaseModule.html":{},"controllers/HealthController.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"overview.html":{}}}],["controllers/student.controller",{"_index":675,"title":{},"body":{"modules/StudentsModule.html":{}}}],["coverage",{"_index":715,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["created",{"_index":809,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["creating",{"_index":478,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["ctx",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["cu",{"_index":269,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{}}}],["cuarto",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":261,"title":{},"body":{"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"classes/Major.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"miscellaneous/variables.html":{}}}],["currentenrolledsemester",{"_index":248,"title":{},"body":{"classes/ElectorDto.html":{},"classes/Major.html":{}}}],["currentmajor",{"_index":249,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{}}}],["currentpage",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentsemester",{"_index":302,"title":{},"body":{"classes/EnrolledSemester.html":{},"classes/Major.html":{},"miscellaneous/functions.html":{}}}],["currentsemesteruc",{"_index":368,"title":{},"body":{"classes/Major.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":216,"title":{},"body":{"injectables/DataService.html":{},"classes/PageDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"controllers/StudentsController.html":{},"miscellaneous/variables.html":{}}}],["data')@apiresponse({status",{"_index":578,"title":{},"body":{"controllers/StudentsController.html":{}}}],["data.length",{"_index":224,"title":{},"body":{"injectables/DataService.html":{}}}],["data.map(async",{"_index":228,"title":{},"body":{"injectables/DataService.html":{}}}],["datafilepath",{"_index":343,"title":{},"body":{"injectables/JsonDataService.html":{}}}],["dataservice",{"_index":189,"title":{"injectables/DataService.html":{}},"body":{"injectables/DataService.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":309,"title":{},"body":{"classes/EnrolledSemester.html":{},"classes/Major.html":{},"classes/Sanction.html":{},"miscellaneous/functions.html":{}}}],["datebase",{"_index":912,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date})@type(undefined",{"_index":311,"title":{},"body":{"classes/EnrolledSemester.html":{},"classes/Major.html":{},"classes/Sanction.html":{}}}],["de",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":240,"title":{},"body":{"injectables/DataService.html":{}}}],["declarations",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/StudentsModule.html":{},"overview.html":{}}}],["decorators",{"_index":259,"title":{},"body":{"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"controllers/HealthController.html":{},"classes/Major.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PostulantDto.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{}}}],["deep",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":323,"title":{},"body":{"classes/EnrolledSemester.html":{},"injectables/JsonDataService.html":{},"classes/Major.html":{},"classes/PageOptionsDto.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"injectables/UtilService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defaultextra",{"_index":231,"title":{},"body":{"injectables/DataService.html":{}}}],["defined",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"controllers/HealthController.html":{},"injectables/JsonDataService.html":{},"classes/Major.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"injectables/RequestService.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"injectables/UtilService.html":{},"properties.html":{}}}],["delete",{"_index":663,"title":{},"body":{"controllers/StudentsController.html":{}}}],["delimiter",{"_index":700,"title":{},"body":{"injectables/UtilService.html":{}}}],["dependencies",{"_index":73,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/StudentsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":878,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["der",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derecho",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["desc",{"_index":896,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["description",{"_index":300,"title":{},"body":{"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"controllers/HealthController.html":{},"classes/Major.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"index.html":{},"properties.html":{}}}],["dest",{"_index":678,"title":{},"body":{"modules/StudentsModule.html":{}}}],["destination",{"_index":638,"title":{},"body":{"controllers/StudentsController.html":{}}}],["determines",{"_index":500,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["dev",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":934,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dides",{"_index":271,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{}}}],["disable",{"_index":162,"title":{},"body":{"modules/CommonModule.html":{},"injectables/UtilService.html":{}}}],["disableerrormessages",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["diskstorage",{"_index":611,"title":{},"body":{"controllers/StudentsController.html":{}}}],["dni",{"_index":278,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{},"classes/Student.html":{}}}],["documentation",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["dr",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dt",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"interfaces/PageMetaDtoParameters.html":{},"controllers/StudentsController.html":{},"coverage.html":{}}}],["dtos",{"_index":431,"title":{},"body":{"interfaces/PageMetaDtoParameters.html":{}}}],["décimo",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e",{"_index":660,"title":{},"body":{"controllers/StudentsController.html":{}}}],["e2e",{"_index":944,"title":{},"body":{"index.html":{}}}],["early",{"_index":806,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["earlyhints",{"_index":805,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eco",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["economía",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edu",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["educación",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["efficient",{"_index":924,"title":{},"body":{"index.html":{}}}],["el",{"_index":362,"title":{},"body":{"injectables/JsonDataService.html":{}}}],["electordto",{"_index":215,"title":{"classes/ElectorDto.html":{}},"body":{"injectables/DataService.html":{},"classes/ElectorDto.html":{},"controllers/StudentsController.html":{},"coverage.html":{}}}],["electors",{"_index":622,"title":{},"body":{"controllers/StudentsController.html":{},"miscellaneous/variables.html":{}}}],["empresas",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end",{"_index":310,"title":{},"body":{"classes/EnrolledSemester.html":{},"classes/Major.html":{},"classes/Sanction.html":{}}}],["enddate",{"_index":303,"title":{},"body":{"classes/EnrolledSemester.html":{},"classes/Major.html":{},"classes/Sanction.html":{}}}],["engine",{"_index":211,"title":{},"body":{"injectables/DataService.html":{},"controllers/StudentsController.html":{},"dependencies.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["engine.evaluate(student)).context.extra",{"_index":230,"title":{},"body":{"injectables/DataService.html":{}}}],["engine.import(`${__dirname}/../../../public/engines/elector/rules.tsbr",{"_index":226,"title":{},"body":{"injectables/DataService.html":{}}}],["engine.import(`${__dirname}/../../../public/engines/postulant/rules.tsbr",{"_index":239,"title":{},"body":{"injectables/DataService.html":{}}}],["engine.import(file.path",{"_index":659,"title":{},"body":{"controllers/StudentsController.html":{}}}],["enrolled",{"_index":262,"title":{},"body":{"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"classes/Major.html":{}}}],["enrolledsemester",{"_index":258,"title":{"classes/EnrolledSemester.html":{}},"body":{"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"classes/Major.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["enrolledsemester.entity",{"_index":390,"title":{},"body":{"classes/Major.html":{}}}],["enrolledsemesters",{"_index":369,"title":{},"body":{"classes/Major.html":{}}}],["enrolleduc",{"_index":304,"title":{},"body":{"classes/EnrolledSemester.html":{}}}],["entities/student/enrolledsemester.entity",{"_index":296,"title":{},"body":{"classes/ElectorDto.html":{}}}],["entities/student/major.entity",{"_index":297,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{}}}],["entities/student/sanction.entity",{"_index":537,"title":{},"body":{"classes/PostulantDto.html":{}}}],["entities/student/student.entity",{"_index":207,"title":{},"body":{"injectables/DataService.html":{},"classes/ElectorDto.html":{},"injectables/JsonDataService.html":{},"classes/PostulantDto.html":{},"controllers/StudentsController.html":{}}}],["entity",{"_index":876,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enum",{"_index":456,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["enumerations",{"_index":796,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":665,"title":{},"body":{"controllers/StudentsController.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":60,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"injectables/JsonDataService.html":{},"miscellaneous/enumerations.html":{}}}],["error(`error",{"_index":359,"title":{},"body":{"injectables/JsonDataService.html":{}}}],["error(`notfoundconfig",{"_index":188,"title":{},"body":{"injectables/ConfigService.html":{}}}],["error(err",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.message",{"_index":365,"title":{},"body":{"injectables/JsonDataService.html":{}}}],["eslint",{"_index":161,"title":{},"body":{"modules/CommonModule.html":{},"injectables/UtilService.html":{}}}],["eslint/no",{"_index":166,"title":{},"body":{"modules/CommonModule.html":{},"injectables/UtilService.html":{}}}],["estucedula",{"_index":250,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{},"classes/Student.html":{}}}],["estunombre",{"_index":251,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{},"classes/Student.html":{}}}],["estustatusinsccode",{"_index":252,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{},"classes/Student.html":{}}}],["exception",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{}}}],["exception.getresponse",{"_index":55,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.stack",{"_index":64,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["expectation",{"_index":869,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["expectation_failed",{"_index":868,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["explicit",{"_index":703,"title":{},"body":{"injectables/UtilService.html":{}}}],["export",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"controllers/HealthController.html":{},"injectables/JsonDataService.html":{},"classes/Major.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"injectables/RequestService.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/UtilService.html":{}}}],["exportcontext",{"_index":742,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["exports",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/StudentsModule.html":{},"overview.html":{}}}],["express",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"injectables/RequestService.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":576,"title":{},"body":{"controllers/StudentsController.html":{}}}],["extemporánea",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":174,"title":{},"body":{"injectables/ConfigService.html":{},"classes/ElectorDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{}}}],["extension",{"_index":651,"title":{},"body":{"controllers/StudentsController.html":{}}}],["extra",{"_index":229,"title":{},"body":{"injectables/DataService.html":{}}}],["faces",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["faculty",{"_index":274,"title":{},"body":{"classes/ElectorDto.html":{},"classes/Major.html":{},"classes/PostulantDto.html":{}}}],["facultycode",{"_index":370,"title":{},"body":{"classes/Major.html":{},"miscellaneous/variables.html":{}}}],["fahd",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failed",{"_index":316,"title":{},"body":{"classes/EnrolledSemester.html":{},"miscellaneous/enumerations.html":{}}}],["failed_dependency",{"_index":877,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["failedsubjects",{"_index":305,"title":{},"body":{"classes/EnrolledSemester.html":{}}}],["faker",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":233,"title":{},"body":{"injectables/DataService.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"controllers/StudentsController.html":{}}}],["fder",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fil",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"controllers/HealthController.html":{},"injectables/JsonDataService.html":{},"classes/Major.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"injectables/RequestService.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/UtilService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.close",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.originalname.split",{"_index":643,"title":{},"body":{"controllers/StudentsController.html":{}}}],["file.readfile('utf",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.writefile(json.stringify(context",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filecontent",{"_index":354,"title":{},"body":{"injectables/JsonDataService.html":{}}}],["fileextension",{"_index":644,"title":{},"body":{"controllers/StudentsController.html":{}}}],["filefilter",{"_index":648,"title":{},"body":{"controllers/StudentsController.html":{}}}],["fileinterceptor",{"_index":597,"title":{},"body":{"controllers/StudentsController.html":{}}}],["fileinterceptor('file",{"_index":636,"title":{},"body":{"controllers/StudentsController.html":{}}}],["filename",{"_index":640,"title":{},"body":{"controllers/StudentsController.html":{},"miscellaneous/variables.html":{}}}],["filenamesplit",{"_index":642,"title":{},"body":{"controllers/StudentsController.html":{}}}],["filenamesplit[filenamesplit.length",{"_index":645,"title":{},"body":{"controllers/StudentsController.html":{}}}],["files",{"_index":653,"title":{},"body":{"controllers/StudentsController.html":{}}}],["filosofía",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":192,"title":{},"body":{"injectables/DataService.html":{},"controllers/StudentsController.html":{}}}],["findall(@query",{"_index":620,"title":{},"body":{"controllers/StudentsController.html":{}}}],["findall(pageoptionsdto",{"_index":198,"title":{},"body":{"injectables/DataService.html":{},"controllers/StudentsController.html":{}}}],["findallelectors",{"_index":193,"title":{},"body":{"injectables/DataService.html":{},"controllers/StudentsController.html":{}}}],["findallelectors(@query",{"_index":624,"title":{},"body":{"controllers/StudentsController.html":{}}}],["findallelectors(pageoptionsdto",{"_index":202,"title":{},"body":{"injectables/DataService.html":{},"controllers/StudentsController.html":{}}}],["findallpostulants",{"_index":194,"title":{},"body":{"injectables/DataService.html":{},"controllers/StudentsController.html":{}}}],["findallpostulants(@query",{"_index":628,"title":{},"body":{"controllers/StudentsController.html":{}}}],["findallpostulants(pageoptionsdto",{"_index":204,"title":{},"body":{"injectables/DataService.html":{},"controllers/StudentsController.html":{}}}],["fing",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["folder",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"injectables/JsonDataService.html":{}}}],["foo",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidden",{"_index":839,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["format",{"_index":634,"title":{},"body":{"controllers/StudentsController.html":{},"properties.html":{}}}],["found",{"_index":823,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["framework",{"_index":922,"title":{},"body":{"index.html":{}}}],["fs",{"_index":610,"title":{},"body":{"controllers/StudentsController.html":{}}}],["fs.open(filename",{"_index":1134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fs/promises",{"_index":350,"title":{},"body":{"injectables/JsonDataService.html":{}}}],["fteo",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":897,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":887,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gateway_timeout",{"_index":890,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generatefakestudents",{"_index":721,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["generatefakestudents(numstudents",{"_index":909,"title":{},"body":{"miscellaneous/functions.html":{}}}],["get('/')@httpcode(httpstatus.ok)@apipaginatedresponse(student",{"_index":569,"title":{},"body":{"controllers/StudentsController.html":{}}}],["get('health",{"_index":338,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('health')@healthcheck",{"_index":328,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(path",{"_index":176,"title":{},"body":{"injectables/ConfigService.html":{}}}],["get(undefined.electors)@httpcode(httpstatus.ok)@apipaginatedresponse(student",{"_index":571,"title":{},"body":{"controllers/StudentsController.html":{}}}],["get(undefined.postulants)@httpcode(httpstatus.ok)@apipaginatedresponse(student",{"_index":573,"title":{},"body":{"controllers/StudentsController.html":{}}}],["get(urls.students.electors",{"_index":623,"title":{},"body":{"controllers/StudentsController.html":{}}}],["get(urls.students.postulants",{"_index":627,"title":{},"body":{"controllers/StudentsController.html":{}}}],["get>(path",{"_index":182,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getnextpage",{"_index":475,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["getpreviouspage",{"_index":476,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["getrequest",{"_index":540,"title":{},"body":{"injectables/RequestService.html":{}}}],["gets",{"_index":497,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["getschemapath(model",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getskip",{"_index":447,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["getting",{"_index":918,"title":{"index.html":{}},"body":{}}],["git+https://github.com/carlososuna11/business",{"_index":989,"title":{},"body":{"properties.html":{}}}],["global",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{}}}],["gone",{"_index":850,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gplv3",{"_index":988,"title":{},"body":{"properties.html":{}}}],["grado",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph",{"_index":974,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":951,"title":{},"body":{"index.html":{}}}],["handler",{"_index":66,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["hasnextpage",{"_index":407,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["haspreviouspage",{"_index":408,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PaginatedResult.html":{}}}],["hasrepeatedsemester",{"_index":371,"title":{},"body":{"classes/Major.html":{}}}],["health",{"_index":335,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheck",{"_index":330,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckresult",{"_index":331,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":332,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":325,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["healthindicatorresult",{"_index":333,"title":{},"body":{"controllers/HealthController.html":{}}}],["hello",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helmet",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"index.html":{}}}],["hints",{"_index":807,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["homepage",{"_index":983,"title":{},"body":{"properties.html":{}}}],["host",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["host.switchtohttp",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host}${this.getnextpage",{"_index":519,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["host}${this.getpreviouspage",{"_index":518,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["http",{"_index":337,"title":{},"body":{"controllers/HealthController.html":{},"miscellaneous/enumerations.html":{}}}],["http://localhost:3000",{"_index":508,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"miscellaneous/variables.html":{}}}],["http_version_not_supported",{"_index":891,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["httpadapter",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(ctx.getresponse",{"_index":67,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpcode",{"_index":594,"title":{},"body":{"controllers/StudentsController.html":{}}}],["httpcode(httpstatus.created",{"_index":655,"title":{},"body":{"controllers/StudentsController.html":{}}}],["httpcode(httpstatus.ok",{"_index":618,"title":{},"body":{"controllers/StudentsController.html":{}}}],["httpexception",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httphealthindicator",{"_index":334,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":145,"title":{},"body":{"modules/BaseModule.html":{}}}],["https://1.1.1.1",{"_index":341,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://cdn.sheetjs.com/xlsx",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["https://docs.nestjs.com",{"_index":904,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://docs.nestjs.com/pipes#global",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["https://docs.nestjs.com/recipes/repl",{"_index":908,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://docs.nestjs.com/recipes/router",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["https://docs.nestjs.com/recipes/serve",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["https://docs.nestjs.com/recipes/swagger",{"_index":917,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://docs.nestjs.com/recipes/terminus",{"_index":327,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://docs.nestjs.com/techniques/configuration",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["https://docs.nestjs.com/techniques/mvc",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["https://docs.nestjs.com/techniques/validation",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/carlososuna11/business",{"_index":984,"title":{},"body":{"properties.html":{}}}],["https://github.com/nestjs/nest/issues/2249#issuecomment",{"_index":906,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://github.com/nestjs/nest/tree/master/sample",{"_index":905,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://nestjs.com",{"_index":967,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/25421233",{"_index":712,"title":{},"body":{"injectables/UtilService.html":{}}}],["httpstatus",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/StudentsController.html":{}}}],["httpstatus.created",{"_index":632,"title":{},"body":{"controllers/StudentsController.html":{}}}],["httpstatus.internal_server_error",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["i'm",{"_index":871,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["i_am_a_teapot",{"_index":870,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["iciv",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":253,"title":{},"body":{"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"classes/Major.html":{},"classes/PostulantDto.html":{},"classes/Sanction.html":{},"classes/Student.html":{}}}],["identifier",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iind",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iinf",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implemented",{"_index":885,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["implements",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/CommonModule.html":{}}}],["import",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"controllers/HealthController.html":{},"injectables/JsonDataService.html":{},"classes/Major.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PostulantDto.html":{},"injectables/RequestService.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/UtilService.html":{}}}],["import(`${__dirname}/envs/${process.env.node_env",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import(`${__dirname}/envs/default",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["importcontext",{"_index":743,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["imports",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules/StudentsModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"controllers/HealthController.html":{},"injectables/JsonDataService.html":{},"classes/Major.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"injectables/RequestService.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"injectables/UtilService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["industrial",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["industriales",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":914,"title":{},"body":{"miscellaneous/functions.html":{}}}],["infer",{"_index":185,"title":{},"body":{"injectables/ConfigService.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"controllers/HealthController.html":{},"injectables/JsonDataService.html":{},"classes/Major.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"injectables/RequestService.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/UtilService.html":{}}}],["information",{"_index":469,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"miscellaneous/enumerations.html":{}}}],["informática",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ingeniería",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ingressstatus",{"_index":728,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":279,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PaginatedResult.html":{},"classes/PostulantDto.html":{}}}],["inject",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/RequestService.html":{}}}],["injectable",{"_index":170,"title":{"injectables/ConfigService.html":{},"injectables/DataService.html":{},"injectables/JsonDataService.html":{},"injectables/RequestService.html":{},"injectables/UtilService.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/DataService.html":{},"injectables/JsonDataService.html":{},"injectables/RequestService.html":{},"injectables/UtilService.html":{},"coverage.html":{}}}],["injectables",{"_index":172,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataService.html":{},"injectables/JsonDataService.html":{},"injectables/RequestService.html":{},"injectables/UtilService.html":{},"overview.html":{}}}],["inscripción",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inscription",{"_index":283,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{},"classes/Student.html":{}}}],["installation",{"_index":931,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":933,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["interface",{"_index":428,"title":{"interfaces/PageMetaDtoParameters.html":{}},"body":{"interfaces/PageMetaDtoParameters.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":418,"title":{},"body":{"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{}}}],["internal",{"_index":58,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/enumerations.html":{}}}],["internal_server_error",{"_index":883,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid",{"_index":669,"title":{},"body":{"controllers/StudentsController.html":{}}}],["ir",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isarray",{"_index":399,"title":{},"body":{"classes/PageDto.html":{}}}],["isarray()@apiproperty({isarray",{"_index":396,"title":{},"body":{"classes/PageDto.html":{}}}],["isenum",{"_index":450,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isenum(order",{"_index":457,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isglobal",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":451,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["iskeyofschema",{"_index":682,"title":{},"body":{"injectables/UtilService.html":{}}}],["iskeyofschema(key",{"_index":685,"title":{},"body":{"injectables/UtilService.html":{}}}],["isobject(value",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isoptional",{"_index":452,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["itel",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itemcount",{"_index":223,"title":{},"body":{"injectables/DataService.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{}}}],["items",{"_index":481,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"miscellaneous/variables.html":{}}}],["itemsperpage",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":351,"title":{},"body":{"injectables/JsonDataService.html":{},"index.html":{}}}],["join(__dirname",{"_index":346,"title":{},"body":{"injectables/JsonDataService.html":{}}}],["join(delimiter",{"_index":707,"title":{},"body":{"injectables/UtilService.html":{}}}],["js/faker",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":364,"title":{},"body":{"injectables/JsonDataService.html":{},"properties.html":{}}}],["json.parse(filecontent",{"_index":358,"title":{},"body":{"injectables/JsonDataService.html":{}}}],["json.parse(json.stringify(args",{"_index":713,"title":{},"body":{"injectables/UtilService.html":{}}}],["jsondataservice",{"_index":196,"title":{"injectables/JsonDataService.html":{}},"body":{"injectables/DataService.html":{},"injectables/JsonDataService.html":{},"coverage.html":{}}}],["kamil",{"_index":964,"title":{},"body":{"index.html":{}}}],["key",{"_index":687,"title":{},"body":{"injectables/UtilService.html":{},"miscellaneous/variables.html":{}}}],["keyof",{"_index":710,"title":{},"body":{"injectables/UtilService.html":{}}}],["keywords",{"_index":982,"title":{},"body":{"properties.html":{}}}],["large",{"_index":857,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["last",{"_index":535,"title":{},"body":{"classes/PostulantDto.html":{},"miscellaneous/variables.html":{}}}],["lastsanction",{"_index":528,"title":{},"body":{"classes/PostulantDto.html":{}}}],["leer",{"_index":361,"title":{},"body":{"injectables/JsonDataService.html":{}}}],["legend",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/StudentsModule.html":{},"overview.html":{}}}],["length",{"_index":852,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["length_required",{"_index":851,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["letras",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["level",{"_index":292,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{},"classes/Student.html":{}}}],["license",{"_index":970,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":948,"title":{},"body":{"index.html":{}}}],["limit",{"_index":472,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["line",{"_index":164,"title":{},"body":{"modules/CommonModule.html":{},"injectables/UtilService.html":{}}}],["line(templatedata",{"_index":688,"title":{},"body":{"injectables/UtilService.html":{}}}],["links",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["list",{"_index":287,"title":{},"body":{"classes/ElectorDto.html":{},"classes/Major.html":{},"classes/PostulantDto.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{}}}],["load",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["loading",{"_index":668,"title":{},"body":{"controllers/StudentsController.html":{}}}],["logger",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/StudentsController.html":{}}}],["logger.error(e",{"_index":661,"title":{},"body":{"controllers/StudentsController.html":{}}}],["logger.error(err",{"_index":666,"title":{},"body":{"controllers/StudentsController.html":{}}}],["logger.error(exception",{"_index":63,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["long",{"_index":860,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["major",{"_index":265,"title":{"classes/Major.html":{}},"body":{"classes/ElectorDto.html":{},"classes/Major.html":{},"classes/PostulantDto.html":{},"classes/Student.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["major.entity",{"_index":563,"title":{},"body":{"classes/Student.html":{}}}],["majorcode",{"_index":372,"title":{},"body":{"classes/Major.html":{}}}],["majors",{"_index":254,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{},"classes/Student.html":{}}}],["many",{"_index":881,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matching",{"_index":69,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"controllers/HealthController.html":{},"injectables/JsonDataService.html":{},"classes/Major.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"injectables/RequestService.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/UtilService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.itemcount",{"_index":424,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["math.ceil(totalcount",{"_index":513,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["max",{"_index":453,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["max(50",{"_index":460,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["maxfilesizevalidator",{"_index":593,"title":{},"body":{"controllers/StudentsController.html":{}}}],["maximum",{"_index":443,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["maxsize",{"_index":657,"title":{},"body":{"controllers/StudentsController.html":{}}}],["media",{"_index":863,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["merge",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merge(target",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":57,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["messages",{"_index":607,"title":{},"body":{"controllers/StudentsController.html":{},"miscellaneous/enumerations.html":{}}}],["messages.created",{"_index":633,"title":{},"body":{"controllers/StudentsController.html":{}}}],["meta",{"_index":392,"title":{},"body":{"classes/PageDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meta.dto",{"_index":402,"title":{},"body":{"classes/PageDto.html":{}}}],["meta.dto.ts",{"_index":406,"title":{},"body":{"classes/PageMetaDto.html":{},"coverage.html":{}}}],["meta.dto.ts:12",{"_index":414,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:15",{"_index":416,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:18",{"_index":413,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:21",{"_index":412,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:6",{"_index":415,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:9",{"_index":417,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["metadata",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/enumerations.html":{}}}],["method_not_allowed",{"_index":841,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["methods",{"_index":10,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"controllers/HealthController.html":{},"injectables/JsonDataService.html":{},"classes/PaginatedResult.html":{},"injectables/RequestService.html":{},"controllers/StudentsController.html":{},"injectables/UtilService.html":{}}}],["mi",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["middleware",{"_index":160,"title":{},"body":{"modules/CommonModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["middleware(app",{"_index":913,"title":{},"body":{"miscellaneous/functions.html":{}}}],["middlewareconsumer",{"_index":154,"title":{},"body":{"modules/CommonModule.html":{}}}],["min",{"_index":454,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["min(1",{"_index":459,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minimum",{"_index":458,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["miscellaneous",{"_index":795,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misdirected",{"_index":873,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mit",{"_index":947,"title":{},"body":{"index.html":{}}}],["mode",{"_index":937,"title":{},"body":{"index.html":{}}}],["model",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modificación",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modified",{"_index":827,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["module",{"_index":70,"title":{"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"modules/StudentsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"modules/StudentsModule.html":{},"overview.html":{}}}],["modules",{"_index":72,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"modules/StudentsModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":960,"title":{},"body":{"index.html":{}}}],["moved",{"_index":821,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["moved_permanently",{"_index":820,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["multer",{"_index":612,"title":{},"body":{"controllers/StudentsController.html":{}}}],["multermodule",{"_index":676,"title":{},"body":{"modules/StudentsModule.html":{}}}],["multermodule.register",{"_index":677,"title":{},"body":{"modules/StudentsModule.html":{}}}],["myśliwiec",{"_index":965,"title":{},"body":{"index.html":{}}}],["n",{"_index":702,"title":{},"body":{"injectables/UtilService.html":{}}}],["name",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"classes/ElectorDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PaginatedResult.html":{},"classes/PostulantDto.html":{},"injectables/RequestService.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"injectables/UtilService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":928,"title":{},"body":{"index.html":{}}}],["nestconfig",{"_index":175,"title":{},"body":{"injectables/ConfigService.html":{}}}],["nestframework",{"_index":969,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["nestjs/axios",{"_index":146,"title":{},"body":{"modules/BaseModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"controllers/HealthController.html":{},"injectables/JsonDataService.html":{},"injectables/RequestService.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/UtilService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/RequestService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":598,"title":{},"body":{"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":299,"title":{},"body":{"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"classes/Major.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PostulantDto.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":148,"title":{},"body":{"modules/BaseModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestmodule",{"_index":157,"title":{},"body":{"modules/CommonModule.html":{}}}],["new",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"injectables/JsonDataService.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"controllers/StudentsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":163,"title":{},"body":{"modules/CommonModule.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"injectables/UtilService.html":{},"miscellaneous/variables.html":{}}}],["no_content",{"_index":814,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["node.js",{"_index":921,"title":{},"body":{"index.html":{}}}],["non",{"_index":812,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["non_authoritative_information",{"_index":811,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_acceptable",{"_index":842,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_found",{"_index":840,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_implemented",{"_index":884,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_modified",{"_index":826,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["noveno",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":932,"title":{},"body":{"index.html":{}}}],["null",{"_index":516,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":313,"title":{},"body":{"classes/EnrolledSemester.html":{},"classes/Major.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["numstudents",{"_index":910,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"controllers/StudentsController.html":{},"miscellaneous/variables.html":{}}}],["object.assign(sourcevalue",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.fromentries(object.entries(argv).filter",{"_index":714,"title":{},"body":{"injectables/UtilService.html":{}}}],["object.keys(source",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(controllers",{"_index":150,"title":{},"body":{"modules/BaseModule.html":{}}}],["object.values(providers",{"_index":159,"title":{},"body":{"modules/CommonModule.html":{},"miscellaneous/variables.html":{}}}],["objectype",{"_index":994,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["octavo",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ok",{"_index":808,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["open",{"_index":949,"title":{},"body":{"index.html":{}}}],["optional",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"classes/ElectorDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"injectables/RequestService.html":{},"classes/Sanction.html":{},"controllers/StudentsController.html":{},"injectables/UtilService.html":{},"miscellaneous/functions.html":{}}}],["options.dto.ts",{"_index":432,"title":{},"body":{"classes/PageOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:10",{"_index":438,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:20",{"_index":441,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:32",{"_index":446,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:34",{"_index":448,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["order",{"_index":433,"title":{},"body":{"classes/PageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["order.asc",{"_index":435,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["otherwise",{"_index":501,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["out",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/StudentsModule.html":{},"overview.html":{}}}],["output",{"_index":704,"title":{},"body":{"injectables/UtilService.html":{}}}],["override",{"_index":181,"title":{},"body":{"injectables/ConfigService.html":{}}}],["overview",{"_index":975,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":177,"title":{},"body":{"injectables/ConfigService.html":{}}}],["package",{"_index":764,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":401,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["page=${this.page",{"_index":505,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["pagecount",{"_index":409,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pagedto",{"_index":208,"title":{"classes/PageDto.html":{}},"body":{"injectables/DataService.html":{},"classes/PageDto.html":{},"controllers/StudentsController.html":{},"coverage.html":{}}}],["pagedto(data.slice(skip",{"_index":225,"title":{},"body":{"injectables/DataService.html":{}}}],["pagedto(results.slice(skip",{"_index":238,"title":{},"body":{"injectables/DataService.html":{}}}],["pagemetadto",{"_index":209,"title":{"classes/PageMetaDto.html":{}},"body":{"injectables/DataService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"coverage.html":{}}}],["pagemetadtoparameters",{"_index":411,"title":{"interfaces/PageMetaDtoParameters.html":{}},"body":{"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"coverage.html":{}}}],["pageoptionsdto",{"_index":199,"title":{"classes/PageOptionsDto.html":{}},"body":{"injectables/DataService.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"controllers/StudentsController.html":{},"coverage.html":{}}}],["pageoptionsdto.page",{"_index":420,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pageoptionsdto.skip",{"_index":220,"title":{},"body":{"injectables/DataService.html":{}}}],["pageoptionsdto.take",{"_index":222,"title":{},"body":{"injectables/DataService.html":{},"classes/PageMetaDto.html":{}}}],["pages",{"_index":484,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["paginate",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["paginated",{"_index":463,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["paginatedresult",{"_index":461,"title":{"classes/PaginatedResult.html":{}},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"coverage.html":{}}}],["paginatequeryoptions",{"_index":745,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pagination",{"_index":468,"title":{"classes/Pagination.html":{}},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"coverage.html":{}}}],["pagination:11",{"_index":491,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["pagination:13",{"_index":495,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["pagination:15",{"_index":492,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["pagination:17",{"_index":494,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["pagination:7",{"_index":490,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["pagination:9",{"_index":493,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["param",{"_index":507,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"injectables/UtilService.html":{}}}],["parameters",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PaginatedResult.html":{},"injectables/RequestService.html":{},"controllers/StudentsController.html":{},"injectables/UtilService.html":{},"miscellaneous/functions.html":{}}}],["parameters.interface.ts",{"_index":430,"title":{},"body":{"interfaces/PageMetaDtoParameters.html":{},"coverage.html":{}}}],["parsefilepipe",{"_index":592,"title":{},"body":{"controllers/StudentsController.html":{}}}],["partial",{"_index":818,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["partial_content",{"_index":817,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["path",{"_index":179,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/JsonDataService.html":{},"miscellaneous/variables.html":{}}}],["pathvalue",{"_index":180,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path}/${name}.json",{"_index":1133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":856,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["payload_too_large",{"_index":855,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["payment",{"_index":837,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["payment_required",{"_index":836,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["per",{"_index":482,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["permanent",{"_index":832,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permanent_redirect",{"_index":831,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permanently",{"_index":822,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pipe",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":958,"title":{},"body":{"index.html":{}}}],["post",{"_index":587,"title":{},"body":{"controllers/StudentsController.html":{}}}],["post(undefined.uploadengineelectors)@apiconsumes('multipart/form",{"_index":577,"title":{},"body":{"controllers/StudentsController.html":{}}}],["post(undefined.uploadenginepostulants)@apiconsumes('multipart/form",{"_index":585,"title":{},"body":{"controllers/StudentsController.html":{}}}],["post(urls.students.uploadengineelectors",{"_index":630,"title":{},"body":{"controllers/StudentsController.html":{}}}],["post(urls.students.uploadenginepostulants",{"_index":670,"title":{},"body":{"controllers/StudentsController.html":{}}}],["postulant",{"_index":529,"title":{},"body":{"classes/PostulantDto.html":{}}}],["postulantdto",{"_index":214,"title":{"classes/PostulantDto.html":{}},"body":{"injectables/DataService.html":{},"classes/PostulantDto.html":{},"controllers/StudentsController.html":{},"coverage.html":{}}}],["postulants",{"_index":626,"title":{},"body":{"controllers/StudentsController.html":{},"miscellaneous/variables.html":{}}}],["pre",{"_index":683,"title":{},"body":{"injectables/UtilService.html":{}}}],["pre(templatedata",{"_index":693,"title":{},"body":{"injectables/UtilService.html":{}}}],["precondition",{"_index":854,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["precondition_failed",{"_index":853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["precondition_required",{"_index":879,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["previous",{"_index":473,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"miscellaneous/variables.html":{}}}],["primer",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":336,"title":{},"body":{"controllers/HealthController.html":{},"injectables/JsonDataService.html":{},"injectables/RequestService.html":{}}}],["process.env.backend_host",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processing",{"_index":804,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["production",{"_index":939,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["program",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["programcampcode",{"_index":255,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{},"classes/Student.html":{}}}],["programlevelcode",{"_index":256,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{},"classes/Student.html":{}}}],["progressive",{"_index":920,"title":{},"body":{"index.html":{}}}],["project",{"_index":950,"title":{},"body":{"index.html":{}}}],["projectscontroller.uploadfile",{"_index":662,"title":{},"body":{"controllers/StudentsController.html":{}}}],["promise",{"_index":201,"title":{},"body":{"injectables/DataService.html":{},"controllers/HealthController.html":{},"injectables/JsonDataService.html":{},"controllers/StudentsController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":227,"title":{},"body":{"injectables/DataService.html":{}}}],["properties",{"_index":247,"title":{"properties.html":{}},"body":{"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"injectables/JsonDataService.html":{},"classes/Major.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["protocols",{"_index":803,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["provide",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/StudentsModule.html":{},"overview.html":{}}}],["proxy",{"_index":845,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["proxy_authentication_required",{"_index":844,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["psi",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["psicología",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/HealthController.html":{},"injectables/JsonDataService.html":{},"controllers/StudentsController.html":{},"injectables/UtilService.html":{}}}],["public/data/student.json",{"_index":352,"title":{},"body":{"injectables/JsonDataService.html":{}}}],["public/data/students.json",{"_index":347,"title":{},"body":{"injectables/JsonDataService.html":{}}}],["pública",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query",{"_index":588,"title":{},"body":{"controllers/StudentsController.html":{}}}],["quinto",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["r",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomenrolledsemester",{"_index":723,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["randomenrolledsemester(semestercode",{"_index":911,"title":{},"body":{"miscellaneous/functions.html":{}}}],["randommajor",{"_index":724,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["randomsanction",{"_index":725,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["randomstudent",{"_index":726,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["range",{"_index":866,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["read",{"_index":959,"title":{},"body":{"index.html":{}}}],["readfile",{"_index":349,"title":{},"body":{"injectables/JsonDataService.html":{}}}],["readfile(this.datafilepath",{"_index":355,"title":{},"body":{"injectables/JsonDataService.html":{}}}],["readjsonfile",{"_index":344,"title":{},"body":{"injectables/JsonDataService.html":{}}}],["readonly",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/DataService.html":{},"injectables/JsonDataService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"injectables/RequestService.html":{},"controllers/StudentsController.html":{}}}],["record",{"_index":698,"title":{},"body":{"injectables/UtilService.html":{},"miscellaneous/typealiases.html":{}}}],["redirect",{"_index":830,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ref",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["regular",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relaciones",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removeundefined",{"_index":684,"title":{},"body":{"injectables/UtilService.html":{}}}],["removeundefined(argv",{"_index":695,"title":{},"body":{"injectables/UtilService.html":{}}}],["repeated",{"_index":385,"title":{},"body":{"classes/Major.html":{}}}],["repository",{"_index":930,"title":{},"body":{"index.html":{},"properties.html":{}}}],["req",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"controllers/StudentsController.html":{}}}],["req.protocol}://${req.get('host",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["request",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"injectables/RequestService.html":{},"miscellaneous/enumerations.html":{}}}],["request_timeout",{"_index":847,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requested",{"_index":865,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requested_range_not_satisfiable",{"_index":864,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requests",{"_index":882,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requestservice",{"_index":538,"title":{"injectables/RequestService.html":{}},"body":{"injectables/RequestService.html":{},"coverage.html":{}}}],["required",{"_index":838,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reset",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/StudentsModule.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["reset_content",{"_index":816,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["resolve",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["responsebody",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["result",{"_index":464,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["results",{"_index":68,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"controllers/HealthController.html":{},"injectables/JsonDataService.html":{},"classes/Major.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"injectables/RequestService.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/UtilService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retiro",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retrieving",{"_index":520,"title":{},"body":{"classes/Pagination.html":{}}}],["retroactivo",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["return",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"controllers/HealthController.html":{},"injectables/JsonDataService.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"injectables/RequestService.html":{},"controllers/StudentsController.html":{},"injectables/UtilService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":480,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["returns",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"controllers/HealthController.html":{},"injectables/JsonDataService.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"injectables/RequestService.html":{},"controllers/StudentsController.html":{},"injectables/UtilService.html":{},"miscellaneous/functions.html":{}}}],["rin",{"_index":1109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["router",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["rule",{"_index":981,"title":{},"body":{"properties.html":{}}}],["rules",{"_index":213,"title":{},"body":{"injectables/DataService.html":{},"controllers/StudentsController.html":{},"dependencies.html":{},"properties.html":{}}}],["rules.${fileextension",{"_index":647,"title":{},"body":{"controllers/StudentsController.html":{}}}],["run",{"_index":935,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["sanction",{"_index":294,"title":{"classes/Sanction.html":{}},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sanction.entity",{"_index":564,"title":{},"body":{"classes/Student.html":{}}}],["sanctioncode",{"_index":549,"title":{},"body":{"classes/Sanction.html":{}}}],["sanctions",{"_index":257,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{},"classes/Student.html":{}}}],["satisfiable",{"_index":867,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scalable",{"_index":925,"title":{},"body":{"index.html":{}}}],["schema",{"_index":581,"title":{},"body":{"controllers/StudentsController.html":{},"injectables/UtilService.html":{},"miscellaneous/variables.html":{}}}],["school",{"_index":276,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{}}}],["scope",{"_index":544,"title":{},"body":{"injectables/RequestService.html":{}}}],["scope.request",{"_index":545,"title":{},"body":{"injectables/RequestService.html":{}}}],["scoped",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["search",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["searchby",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["see",{"_index":825,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["see_other",{"_index":824,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["segundo",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["semester",{"_index":263,"title":{},"body":{"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"classes/Major.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["semestercode",{"_index":306,"title":{},"body":{"classes/EnrolledSemester.html":{},"miscellaneous/functions.html":{}}}],["semesters",{"_index":382,"title":{},"body":{"classes/Major.html":{}}}],["semestre",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":59,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["serveroot",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/enumerations.html":{}}}],["service_unavailable",{"_index":888,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["services",{"_index":158,"title":{},"body":{"modules/CommonModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["services/student.service",{"_index":599,"title":{},"body":{"controllers/StudentsController.html":{},"modules/StudentsModule.html":{}}}],["set",{"_index":489,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["setupswagger",{"_index":761,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupswagger(app",{"_index":916,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sexto",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":926,"title":{},"body":{"index.html":{}}}],["situations",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["skip",{"_index":219,"title":{},"body":{"injectables/DataService.html":{},"classes/PageOptionsDto.html":{}}}],["skipped",{"_index":487,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["skippeditems",{"_index":470,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["soc",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["social",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sociología",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sortby",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"controllers/HealthController.html":{},"injectables/JsonDataService.html":{},"classes/Major.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"injectables/RequestService.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"injectables/UtilService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["source[key",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sourcevalue",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sponsors",{"_index":953,"title":{},"body":{"index.html":{}}}],["src/.../app.middleware.ts",{"_index":901,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.ts",{"_index":898,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../common.module.ts",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.interface.ts",{"_index":993,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../configuration.ts",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../decorators.ts",{"_index":902,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../default.ts",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../development.ts",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../messages.ts",{"_index":797,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../order.constant.ts",{"_index":798,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../production.ts",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../repl.ts",{"_index":899,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../swagger.ts",{"_index":903,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../test.ts",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../urls.ts",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../util.service.ts",{"_index":995,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.middleware.ts",{"_index":730,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.ts",{"_index":731,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/base/base.module.ts",{"_index":144,"title":{},"body":{"modules/BaseModule.html":{}}}],["src/base/controllers/health.controller.ts",{"_index":326,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/base/controllers/health.controller.ts:19",{"_index":329,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/common/common.module.ts",{"_index":151,"title":{},"body":{"modules/CommonModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/common.module.ts:15",{"_index":155,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/constants/order.constant.ts",{"_index":894,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/urls.ts",{"_index":735,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/dtos/page",{"_index":405,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"coverage.html":{}}}],["src/common/dtos/page.dto.ts",{"_index":391,"title":{},"body":{"classes/PageDto.html":{},"coverage.html":{}}}],["src/common/dtos/page.dto.ts:11",{"_index":395,"title":{},"body":{"classes/PageDto.html":{}}}],["src/common/dtos/page.dto.ts:8",{"_index":397,"title":{},"body":{"classes/PageDto.html":{}}}],["src/common/filters/exceptions.filter.ts",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/common/filters/exceptions.filter.ts:6",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/filters/exceptions.filter.ts:9",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/interfaces/page",{"_index":429,"title":{},"body":{"interfaces/PageMetaDtoParameters.html":{},"coverage.html":{}}}],["src/common/providers/bd.service.ts",{"_index":342,"title":{},"body":{"injectables/JsonDataService.html":{},"coverage.html":{}}}],["src/common/providers/bd.service.ts:10",{"_index":345,"title":{},"body":{"injectables/JsonDataService.html":{}}}],["src/common/providers/bd.service.ts:9",{"_index":348,"title":{},"body":{"injectables/JsonDataService.html":{}}}],["src/common/providers/config.service.ts",{"_index":173,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/common/providers/config.service.ts:8",{"_index":178,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/common/providers/requests.service.ts",{"_index":539,"title":{},"body":{"injectables/RequestService.html":{},"coverage.html":{}}}],["src/common/providers/requests.service.ts:6",{"_index":542,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/common/providers/requests.service.ts:9",{"_index":543,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/common/providers/util.service.ts",{"_index":681,"title":{},"body":{"injectables/UtilService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/providers/util.service.ts:24",{"_index":694,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/common/providers/util.service.ts:28",{"_index":691,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/common/providers/util.service.ts:32",{"_index":686,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/common/providers/util.service.ts:36",{"_index":696,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/common/providers/util.service.ts:8",{"_index":701,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/common/utils/context/index.ts",{"_index":741,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/utils/pagination/decorators.ts",{"_index":744,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/common/utils/pagination/paginate.ts",{"_index":462,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"coverage.html":{}}}],["src/common/utils/pagination/paginate.ts:11",{"_index":522,"title":{},"body":{"classes/Pagination.html":{}}}],["src/common/utils/pagination/paginate.ts:13",{"_index":526,"title":{},"body":{"classes/Pagination.html":{}}}],["src/common/utils/pagination/paginate.ts:15",{"_index":523,"title":{},"body":{"classes/Pagination.html":{}}}],["src/common/utils/pagination/paginate.ts:17",{"_index":525,"title":{},"body":{"classes/Pagination.html":{}}}],["src/common/utils/pagination/paginate.ts:26",{"_index":488,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["src/common/utils/pagination/paginate.ts:28",{"_index":486,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["src/common/utils/pagination/paginate.ts:34",{"_index":499,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["src/common/utils/pagination/paginate.ts:42",{"_index":502,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["src/common/utils/pagination/paginate.ts:50",{"_index":496,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["src/common/utils/pagination/paginate.ts:58",{"_index":498,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["src/common/utils/pagination/paginate.ts:60",{"_index":477,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["src/common/utils/pagination/paginate.ts:7",{"_index":521,"title":{},"body":{"classes/Pagination.html":{}}}],["src/common/utils/pagination/paginate.ts:9",{"_index":524,"title":{},"body":{"classes/Pagination.html":{}}}],["src/common/utils/response/messages.ts",{"_index":799,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/config/config.interface.ts",{"_index":996,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/config/configuration.ts",{"_index":748,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/envs/default.ts",{"_index":750,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/envs/development.ts",{"_index":751,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/envs/production.ts",{"_index":752,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/envs/test.ts",{"_index":753,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/entities/student/enrolledsemester.entity.ts",{"_index":301,"title":{},"body":{"classes/EnrolledSemester.html":{},"coverage.html":{}}}],["src/entities/student/enrolledsemester.entity.ts:10",{"_index":319,"title":{},"body":{"classes/EnrolledSemester.html":{}}}],["src/entities/student/enrolledsemester.entity.ts:16",{"_index":318,"title":{},"body":{"classes/EnrolledSemester.html":{}}}],["src/entities/student/enrolledsemester.entity.ts:22",{"_index":315,"title":{},"body":{"classes/EnrolledSemester.html":{}}}],["src/entities/student/enrolledsemester.entity.ts:28",{"_index":308,"title":{},"body":{"classes/EnrolledSemester.html":{}}}],["src/entities/student/enrolledsemester.entity.ts:35",{"_index":321,"title":{},"body":{"classes/EnrolledSemester.html":{}}}],["src/entities/student/enrolledsemester.entity.ts:42",{"_index":312,"title":{},"body":{"classes/EnrolledSemester.html":{}}}],["src/entities/student/major.entity.ts",{"_index":366,"title":{},"body":{"classes/Major.html":{},"coverage.html":{}}}],["src/entities/student/major.entity.ts:10",{"_index":387,"title":{},"body":{"classes/Major.html":{}}}],["src/entities/student/major.entity.ts:16",{"_index":384,"title":{},"body":{"classes/Major.html":{}}}],["src/entities/student/major.entity.ts:23",{"_index":388,"title":{},"body":{"classes/Major.html":{}}}],["src/entities/student/major.entity.ts:30",{"_index":381,"title":{},"body":{"classes/Major.html":{}}}],["src/entities/student/major.entity.ts:36",{"_index":375,"title":{},"body":{"classes/Major.html":{}}}],["src/entities/student/major.entity.ts:42",{"_index":379,"title":{},"body":{"classes/Major.html":{}}}],["src/entities/student/major.entity.ts:48",{"_index":380,"title":{},"body":{"classes/Major.html":{}}}],["src/entities/student/major.entity.ts:54",{"_index":383,"title":{},"body":{"classes/Major.html":{}}}],["src/entities/student/major.entity.ts:60",{"_index":377,"title":{},"body":{"classes/Major.html":{}}}],["src/entities/student/major.entity.ts:66",{"_index":389,"title":{},"body":{"classes/Major.html":{}}}],["src/entities/student/major.entity.ts:72",{"_index":386,"title":{},"body":{"classes/Major.html":{}}}],["src/entities/student/sanction.entity.ts",{"_index":548,"title":{},"body":{"classes/Sanction.html":{},"coverage.html":{}}}],["src/entities/student/sanction.entity.ts:10",{"_index":552,"title":{},"body":{"classes/Sanction.html":{}}}],["src/entities/student/sanction.entity.ts:17",{"_index":553,"title":{},"body":{"classes/Sanction.html":{}}}],["src/entities/student/sanction.entity.ts:24",{"_index":551,"title":{},"body":{"classes/Sanction.html":{}}}],["src/entities/student/student.entity.ts",{"_index":554,"title":{},"body":{"classes/Student.html":{},"coverage.html":{}}}],["src/entities/student/student.entity.ts:11",{"_index":558,"title":{},"body":{"classes/Student.html":{}}}],["src/entities/student/student.entity.ts:17",{"_index":556,"title":{},"body":{"classes/Student.html":{}}}],["src/entities/student/student.entity.ts:23",{"_index":555,"title":{},"body":{"classes/Student.html":{}}}],["src/entities/student/student.entity.ts:29",{"_index":557,"title":{},"body":{"classes/Student.html":{}}}],["src/entities/student/student.entity.ts:35",{"_index":561,"title":{},"body":{"classes/Student.html":{}}}],["src/entities/student/student.entity.ts:41",{"_index":560,"title":{},"body":{"classes/Student.html":{}}}],["src/entities/student/student.entity.ts:47",{"_index":559,"title":{},"body":{"classes/Student.html":{}}}],["src/entities/student/student.entity.ts:53",{"_index":562,"title":{},"body":{"classes/Student.html":{}}}],["src/repl.ts",{"_index":757,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/student/controllers/student.controller.ts",{"_index":566,"title":{},"body":{"controllers/StudentsController.html":{},"coverage.html":{}}}],["src/student/controllers/student.controller.ts:159",{"_index":586,"title":{},"body":{"controllers/StudentsController.html":{}}}],["src/student/controllers/student.controller.ts:39",{"_index":570,"title":{},"body":{"controllers/StudentsController.html":{}}}],["src/student/controllers/student.controller.ts:47",{"_index":572,"title":{},"body":{"controllers/StudentsController.html":{}}}],["src/student/controllers/student.controller.ts:55",{"_index":574,"title":{},"body":{"controllers/StudentsController.html":{}}}],["src/student/controllers/student.controller.ts:98",{"_index":583,"title":{},"body":{"controllers/StudentsController.html":{}}}],["src/student/dto/elector.dto.ts",{"_index":246,"title":{},"body":{"classes/ElectorDto.html":{},"coverage.html":{}}}],["src/student/dto/elector.dto.ts:11",{"_index":270,"title":{},"body":{"classes/ElectorDto.html":{}}}],["src/student/dto/elector.dto.ts:17",{"_index":272,"title":{},"body":{"classes/ElectorDto.html":{}}}],["src/student/dto/elector.dto.ts:23",{"_index":277,"title":{},"body":{"classes/ElectorDto.html":{}}}],["src/student/dto/elector.dto.ts:29",{"_index":275,"title":{},"body":{"classes/ElectorDto.html":{}}}],["src/student/dto/elector.dto.ts:35",{"_index":266,"title":{},"body":{"classes/ElectorDto.html":{}}}],["src/student/dto/elector.dto.ts:41",{"_index":264,"title":{},"body":{"classes/ElectorDto.html":{}}}],["src/student/dto/postulant.dto.ts",{"_index":527,"title":{},"body":{"classes/PostulantDto.html":{},"coverage.html":{}}}],["src/student/dto/postulant.dto.ts:11",{"_index":530,"title":{},"body":{"classes/PostulantDto.html":{}}}],["src/student/dto/postulant.dto.ts:17",{"_index":531,"title":{},"body":{"classes/PostulantDto.html":{}}}],["src/student/dto/postulant.dto.ts:23",{"_index":533,"title":{},"body":{"classes/PostulantDto.html":{}}}],["src/student/dto/postulant.dto.ts:29",{"_index":532,"title":{},"body":{"classes/PostulantDto.html":{}}}],["src/student/dto/postulant.dto.ts:35",{"_index":534,"title":{},"body":{"classes/PostulantDto.html":{}}}],["src/student/dto/postulant.dto.ts:41",{"_index":536,"title":{},"body":{"classes/PostulantDto.html":{}}}],["src/student/services/student.service.ts",{"_index":190,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/student/services/student.service.ts:12",{"_index":200,"title":{},"body":{"injectables/DataService.html":{}}}],["src/student/services/student.service.ts:28",{"_index":203,"title":{},"body":{"injectables/DataService.html":{}}}],["src/student/services/student.service.ts:60",{"_index":205,"title":{},"body":{"injectables/DataService.html":{}}}],["src/student/services/student.service.ts:9",{"_index":197,"title":{},"body":{"injectables/DataService.html":{}}}],["src/student/student.module.ts",{"_index":674,"title":{},"body":{"modules/StudentsModule.html":{}}}],["src/swagger.ts",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":320,"title":{},"body":{"classes/EnrolledSemester.html":{},"classes/Major.html":{},"classes/Sanction.html":{},"index.html":{}}}],["start:dev",{"_index":938,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":940,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":307,"title":{},"body":{"classes/EnrolledSemester.html":{},"classes/Major.html":{},"classes/Sanction.html":{}}}],["started",{"_index":919,"title":{"index.html":{}},"body":{}}],["starter",{"_index":929,"title":{},"body":{"index.html":{}}}],["statements",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":282,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{}}}],["statuscode",{"_index":56,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["stay",{"_index":961,"title":{},"body":{"index.html":{}}}],["storage",{"_index":637,"title":{},"body":{"controllers/StudentsController.html":{}}}],["string",{"_index":273,"title":{},"body":{"classes/ElectorDto.html":{},"classes/Major.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"injectables/UtilService.html":{},"miscellaneous/variables.html":{}}}],["string(exception",{"_index":65,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["student",{"_index":101,"title":{"classes/Student.html":{}},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"classes/ElectorDto.html":{},"injectables/JsonDataService.html":{},"classes/Major.html":{},"classes/PostulantDto.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["student:11",{"_index":286,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{}}}],["student:17",{"_index":281,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{}}}],["student:23",{"_index":280,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{}}}],["student:29",{"_index":284,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{}}}],["student:35",{"_index":293,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{}}}],["student:41",{"_index":291,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{}}}],["student:47",{"_index":288,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{}}}],["student:53",{"_index":295,"title":{},"body":{"classes/ElectorDto.html":{},"classes/PostulantDto.html":{}}}],["studentinfo",{"_index":237,"title":{},"body":{"injectables/DataService.html":{}}}],["students",{"_index":617,"title":{},"body":{"controllers/StudentsController.html":{},"miscellaneous/variables.html":{}}}],["studentscontroller",{"_index":565,"title":{"controllers/StudentsController.html":{}},"body":{"controllers/StudentsController.html":{},"modules/StudentsModule.html":{},"coverage.html":{}}}],["studentsmodule",{"_index":83,"title":{"modules/StudentsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StudentsModule.html":{},"modules.html":{},"overview.html":{}}}],["studentsservice",{"_index":616,"title":{},"body":{"controllers/StudentsController.html":{}}}],["subjects",{"_index":317,"title":{},"body":{"classes/EnrolledSemester.html":{}}}],["subset",{"_index":466,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["super",{"_index":509,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["super.get(path",{"_index":184,"title":{},"body":{"injectables/ConfigService.html":{}}}],["support",{"_index":954,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supported",{"_index":893,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["svg",{"_index":972,"title":{},"body":{"modules.html":{}}}],["switching",{"_index":802,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["switching_protocols",{"_index":801,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["séptimo",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":394,"title":{},"body":{"classes/PageDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"injectables/UtilService.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":221,"title":{},"body":{"injectables/DataService.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["tardía",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target[key",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["targetvalue",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teapot",{"_index":872,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["telecomunicaciones",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":504,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"injectables/UtilService.html":{}}}],["template(templatedata",{"_index":699,"title":{},"body":{"injectables/UtilService.html":{}}}],["templatedata",{"_index":692,"title":{},"body":{"injectables/UtilService.html":{}}}],["templateparameter",{"_index":690,"title":{},"body":{"injectables/UtilService.html":{},"miscellaneous/typealiases.html":{}}}],["templatestringsarray",{"_index":689,"title":{},"body":{"injectables/UtilService.html":{}}}],["temporary",{"_index":829,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["temporary_redirect",{"_index":828,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["teo",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teología",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tercer",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terminusmodule",{"_index":147,"title":{},"body":{"modules/BaseModule.html":{}}}],["tesis",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":943,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":946,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":945,"title":{},"body":{"index.html":{}}}],["tests",{"_index":942,"title":{},"body":{"index.html":{}}}],["text.replace(/^\\s+/gm",{"_index":706,"title":{},"body":{"injectables/UtilService.html":{}}}],["tg",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thanks",{"_index":952,"title":{},"body":{"index.html":{}}}],["this.data",{"_index":403,"title":{},"body":{"classes/PageDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["this.hasnextpage",{"_index":427,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["this.haspreviouspage",{"_index":425,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["this.health.check",{"_index":339,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck('dns",{"_index":340,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.httpadapterhost",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.isobject(sourcevalue",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.isobject(targetvalue",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.itemcount",{"_index":422,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.jsondataservice.readjsonfile",{"_index":218,"title":{},"body":{"injectables/DataService.html":{}}}],["this.limit",{"_index":510,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["this.merge(targetvalue",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.meta",{"_index":404,"title":{},"body":{"classes/PageDto.html":{}}}],["this.next",{"_index":517,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["this.page",{"_index":419,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["this.pagecount",{"_index":423,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.previous",{"_index":515,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["this.request",{"_index":547,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.skippeditems",{"_index":514,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["this.studentsservice.findall(pageoptionsdto",{"_index":621,"title":{},"body":{"controllers/StudentsController.html":{}}}],["this.studentsservice.findallelectors(pageoptionsdto",{"_index":625,"title":{},"body":{"controllers/StudentsController.html":{}}}],["this.studentsservice.findallpostulants(pageoptionsdto",{"_index":629,"title":{},"body":{"controllers/StudentsController.html":{}}}],["this.take",{"_index":421,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.template(templatedata",{"_index":709,"title":{},"body":{"injectables/UtilService.html":{}}}],["this.totalcount",{"_index":511,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["this.totalpages",{"_index":512,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["throw",{"_index":187,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/JsonDataService.html":{},"controllers/StudentsController.html":{},"miscellaneous/variables.html":{}}}],["thus",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["timeout",{"_index":848,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tmodel",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["too_many_requests",{"_index":880,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["total",{"_index":483,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"miscellaneous/variables.html":{}}}],["totalcount",{"_index":474,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["totalitems",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalpages",{"_index":471,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":962,"title":{},"body":{"index.html":{}}}],["traceback",{"_index":62,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["transform",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["transformer",{"_index":322,"title":{},"body":{"classes/EnrolledSemester.html":{},"classes/Major.html":{},"classes/PageOptionsDto.html":{},"classes/Sanction.html":{},"dependencies.html":{}}}],["trim",{"_index":708,"title":{},"body":{"injectables/UtilService.html":{}}}],["true",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"classes/Major.html":{},"classes/PageDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{}}}],["try",{"_index":353,"title":{},"body":{"injectables/JsonDataService.html":{},"controllers/StudentsController.html":{},"miscellaneous/variables.html":{}}}],["tsbr",{"_index":580,"title":{},"body":{"controllers/StudentsController.html":{}}}],["twitter",{"_index":968,"title":{},"body":{"index.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/DataService.html":{},"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"classes/Major.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/PostulantDto.html":{},"injectables/RequestService.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"injectables/UtilService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":991,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":711,"title":{},"body":{"injectables/UtilService.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":165,"title":{},"body":{"modules/CommonModule.html":{},"injectables/DataService.html":{},"controllers/StudentsController.html":{},"injectables/UtilService.html":{},"dependencies.html":{},"index.html":{},"properties.html":{}}}],["u",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":314,"title":{},"body":{"classes/EnrolledSemester.html":{},"classes/Major.html":{}}}],["unauthorized",{"_index":835,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unavailable",{"_index":889,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":186,"title":{},"body":{"injectables/ConfigService.html":{},"classes/ElectorDto.html":{},"classes/Major.html":{},"classes/PostulantDto.html":{},"classes/Sanction.html":{},"classes/Student.html":{},"controllers/StudentsController.html":{},"injectables/UtilService.html":{}}}],["undefined})@apibody({description",{"_index":579,"title":{},"body":{"controllers/StudentsController.html":{}}}],["undefined})@isenum(order)@isoptional",{"_index":437,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["undefined})@type(undefined",{"_index":550,"title":{},"body":{"classes/Sanction.html":{}}}],["undefined})@useinterceptors(undefined)@httpcode(httpstatus.created",{"_index":582,"title":{},"body":{"controllers/StudentsController.html":{}}}],["uniqueitems",{"_index":285,"title":{},"body":{"classes/ElectorDto.html":{},"classes/EnrolledSemester.html":{},"classes/Major.html":{},"classes/PostulantDto.html":{},"classes/Sanction.html":{},"classes/Student.html":{}}}],["unit",{"_index":941,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/UtilService.html":{}}}],["unlink",{"_index":609,"title":{},"body":{"controllers/StudentsController.html":{}}}],["unlink(file.path",{"_index":664,"title":{},"body":{"controllers/StudentsController.html":{}}}],["unprocessable",{"_index":875,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unprocessable_entity",{"_index":874,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unsupported",{"_index":862,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unsupported_media_type",{"_index":861,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unsupportedmediatypeexception",{"_index":595,"title":{},"body":{"controllers/StudentsController.html":{}}}],["unsupportedmediatypeexception('file",{"_index":650,"title":{},"body":{"controllers/StudentsController.html":{}}}],["unused",{"_index":167,"title":{},"body":{"modules/CommonModule.html":{}}}],["uploadedfile",{"_index":591,"title":{},"body":{"controllers/StudentsController.html":{}}}],["uploadelectorengine",{"_index":567,"title":{},"body":{"controllers/StudentsController.html":{}}}],["uploadelectorengine(file",{"_index":575,"title":{},"body":{"controllers/StudentsController.html":{}}}],["uploadengineelectors",{"_index":1144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadenginepostulants",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadpostulantengine",{"_index":568,"title":{},"body":{"controllers/StudentsController.html":{}}}],["uploadpostulantengine(file",{"_index":584,"title":{},"body":{"controllers/StudentsController.html":{}}}],["uri",{"_index":859,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["uri_too_long",{"_index":858,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["url",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["urls",{"_index":600,"title":{},"body":{"controllers/StudentsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["useinterceptors",{"_index":589,"title":{},"body":{"controllers/StudentsController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":615,"title":{},"body":{"controllers/StudentsController.html":{}}}],["usevalue",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["utf",{"_index":356,"title":{},"body":{"injectables/JsonDataService.html":{}}}],["util",{"_index":749,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["util.merge(config",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utilservice",{"_index":680,"title":{"injectables/UtilService.html":{}},"body":{"injectables/UtilService.html":{},"coverage.html":{}}}],["valid",{"_index":652,"title":{},"body":{"controllers/StudentsController.html":{}}}],["validation",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["validationpipe",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":400,"title":{},"body":{"classes/PageDto.html":{},"classes/PageOptionsDto.html":{},"dependencies.html":{}}}],["validators",{"_index":656,"title":{},"body":{"controllers/StudentsController.html":{}}}],["value",{"_index":183,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/JsonDataService.html":{},"classes/PageOptionsDto.html":{},"injectables/UtilService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":997,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":168,"title":{},"body":{"modules/CommonModule.html":{}}}],["version",{"_index":892,"title":{},"body":{"miscellaneous/enumerations.html":{},"properties.html":{}}}],["void",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/CommonModule.html":{},"miscellaneous/functions.html":{}}}],["vote",{"_index":268,"title":{},"body":{"classes/ElectorDto.html":{}}}],["votecu",{"_index":232,"title":{},"body":{"injectables/DataService.html":{},"classes/ElectorDto.html":{}}}],["votedides",{"_index":234,"title":{},"body":{"injectables/DataService.html":{},"classes/ElectorDto.html":{}}}],["votefaculty",{"_index":236,"title":{},"body":{"injectables/DataService.html":{},"classes/ElectorDto.html":{}}}],["voteschool",{"_index":235,"title":{},"body":{"injectables/DataService.html":{},"classes/ElectorDto.html":{}}}],["w",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warn",{"_index":241,"title":{},"body":{"injectables/DataService.html":{}}}],["watch",{"_index":936,"title":{},"body":{"index.html":{}}}],["website",{"_index":966,"title":{},"body":{"index.html":{}}}],["whitelist",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["world",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xlsx",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["years",{"_index":373,"title":{},"body":{"classes/Major.html":{},"miscellaneous/variables.html":{}}}],["you'd",{"_index":957,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/StudentsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/exceptions.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/common/filters/exceptions.filter.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/exceptions.filter.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException, HttpStatus } from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\nimport { Logger } from '@nestjs/common';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n\tconstructor(private readonly httpAdapterHost: HttpAdapterHost) {}\n\n\tcatch(exception: unknown, host: ArgumentsHost): void {\n\t\t// In certain situations `httpAdapter` might not be available in the\n\t\t// constructor method, thus we should resolve it here.\n\t\tconst { httpAdapter } = this.httpAdapterHost;\n\n\t\tconst ctx = host.switchToHttp();\n\n\t\tconst httpStatus = exception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n\n\t\tconst responseBody =\n\t\t\texception instanceof HttpException\n\t\t\t\t? exception.getResponse()\n\t\t\t\t: { statusCode: httpStatus, message: 'Internal Server Error' };\n\n\t\t// console all exception traceback\n\t\tLogger.error(exception instanceof Error ? exception.stack : String(exception), 'Exception Handler');\n\n\t\thttpAdapter.reply(ctx.getResponse(), responseBody, httpStatus);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nBaseModule\n\nBaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBaseModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nStudentsModule\n\nStudentsModule\n\nAppModule -->\n\nStudentsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BaseModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            StudentsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, ValidationPipe } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { APP_FILTER, APP_PIPE } from '@nestjs/core';\nimport { ServeStaticModule } from '@nestjs/serve-static';\n\nimport { CommonModule, AllExceptionsFilter } from './common';\nimport { configuration } from './config';\nimport { BaseModule } from './base';\nimport { StudentsModule } from './student';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\n@Module({\n\timports: [\n\t\t// Configuration\n\t\t// https://docs.nestjs.com/techniques/configuration\n\t\tConfigModule.forRoot({\n\t\t\tisGlobal: true,\n\t\t\tload: [configuration],\n\t\t}),\n\t\t// Static Folder\n\t\t// https://docs.nestjs.com/recipes/serve-static\n\t\t// https://docs.nestjs.com/techniques/mvc\n\t\tServeStaticModule.forRoot({\n\t\t\trootPath: `${__dirname}/../public`,\n\t\t\tserveRoot: '/public/',\n\t\t}),\n\t\t// Service Modules\n\t\tCommonModule,\n\t\tBaseModule,\n\t\tStudentsModule,\n\t\t// Global\n\t\t// Module Router\n\t\t// https://docs.nestjs.com/recipes/router-module\n\t],\n\tproviders: [\n\t\t// Global Filter, Exception check\n\t\t{ provide: APP_FILTER, useClass: AllExceptionsFilter },\n\t\t// Global Pipe, Validation check\n\t\t// https://docs.nestjs.com/pipes#global-scoped-pipes\n\t\t// https://docs.nestjs.com/techniques/validation\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseValue: new ValidationPipe({\n\t\t\t\t// disableErrorMessages: true,\n\t\t\t\ttransform: true, // transform object to DTO class\n\t\t\t\twhitelist: true,\n\t\t\t}),\n\t\t},\n\t\t// REQUEST URL BASE\n\t\t{\n\t\t\tprovide: 'HOST',\n\t\t\tuseFactory: (req: Request) => {\n\t\t\t\tconst host = `${req.protocol}://${req.get('Host')}`;\n\t\t\t\treturn host;\n\t\t\t},\n\t\t\tinject: [REQUEST],\n\t\t},\n\t],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BaseModule.html":{"url":"modules/BaseModule.html","title":"module - BaseModule","body":"\n                   \n\n\n\n\n    Modules\n    BaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/base/base.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\n\nimport * as controllers from './controllers';\n@Module({\n\timports: [TerminusModule, HttpModule],\n\tcontrollers: Object.values(controllers),\n})\nexport class BaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        configure\n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/common/common.module.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Global, MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\n\nimport * as providers from './providers';\n\nconst services = Object.values(providers);\n\n@Global()\n@Module({\n\tproviders: services,\n\texports: services,\n})\nexport class CommonModule implements NestModule {\n\t// Global Middleware\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tpublic configure(consumer: MiddlewareConsumer): void {\n\t\t// consumer.apply().forRoutes('*');\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/providers/config.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        NestConfig\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(path: P)\n                \n            \n\n\n            \n                \n                    Defined in src/common/providers/config.service.ts:8\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            P\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PathValue\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService as NestConfig, Path, PathValue } from '@nestjs/config';\n\nimport type { Config } from '../../config';\n\n@Injectable()\nexport class ConfigService extends NestConfig {\n\tpublic override get>(path: P): PathValue {\n\t\tconst value = super.get(path, { infer: true });\n\n\t\tif (value === undefined) {\n\t\t\tthrow new Error(`NotFoundConfig: ${path}`);\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/services/student.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllElectors\n                            \n                            \n                                    Async\n                                findAllPostulants\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jsonDataService: JsonDataService)\n                    \n                \n                        \n                            \n                                Defined in src/student/services/student.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsonDataService\n                                                  \n                                                        \n                                                                        JsonDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/student/services/student.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllElectors\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllElectors(pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/student/services/student.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllPostulants\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllPostulants(pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/student/services/student.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JsonDataService } from '@common/providers';\nimport Student from '@entities/student/student.entity';\nimport { PageDto, PageMetaDto, PageOptionsDto } from '@common/dtos';\nimport { Engine } from 'typescript-business-rules-engine';\nimport { PostulantDto, ElectorDto } from '../dto';\n\n@Injectable()\nexport class DataService {\n\tconstructor(private readonly jsonDataService: JsonDataService) {}\n\n\tasync findAll(pageOptionsDto: PageOptionsDto): Promise> {\n\t\tconst data = await this.jsonDataService.readJsonFile();\n\n\t\tconst skip = pageOptionsDto.skip;\n\t\tconst take = pageOptionsDto.take;\n\n\t\tconst itemCount = data.length;\n\n\t\tconst pageMetaDto = new PageMetaDto({\n\t\t\titemCount,\n\t\t\tpageOptionsDto,\n\t\t});\n\n\t\treturn new PageDto(data.slice(skip, skip + take), pageMetaDto);\n\t}\n\n\tasync findAllElectors(pageOptionsDto: PageOptionsDto): Promise> {\n\t\tconst data = await this.jsonDataService.readJsonFile();\n\n\t\tconst engine = await Engine.import(`${__dirname}/../../../public/engines/elector/rules.tsbr`);\n\n\t\tconst results = await Promise.all(\n\t\t\tdata.map(async (student) => {\n\t\t\t\tconst extra = (await engine.evaluate(student)).context.extra as object;\n\t\t\t\tconst defaultExtra = {\n\t\t\t\t\tvoteCU: false,\n\t\t\t\t\tvoteDIDES: false,\n\t\t\t\t\tvoteSchool: '',\n\t\t\t\t\tvoteFaculty: '',\n\t\t\t\t};\n\t\t\t\tconst studentInfo = student as object;\n\t\t\t\treturn { ...studentInfo, ...defaultExtra, ...extra } as ElectorDto;\n\t\t\t})\n\t\t);\n\n\t\tconst skip = pageOptionsDto.skip;\n\t\tconst take = pageOptionsDto.take;\n\n\t\tconst itemCount = data.length;\n\n\t\tconst pageMetaDto = new PageMetaDto({\n\t\t\titemCount,\n\t\t\tpageOptionsDto,\n\t\t});\n\n\t\treturn new PageDto(results.slice(skip, skip + take), pageMetaDto);\n\t}\n\n\tasync findAllPostulants(pageOptionsDto: PageOptionsDto): Promise> {\n\t\tconst data = await this.jsonDataService.readJsonFile();\n\n\t\tconst engine = await Engine.import(`${__dirname}/../../../public/engines/postulant/rules.tsbr`, {\n\t\t\tfilter: {\n\t\t\t\terror: true,\n\t\t\t\tdebug: true,\n\t\t\t\twarn: true,\n\t\t\t\tinfo: true,\n\t\t\t},\n\t\t});\n\t\tconst results = await Promise.all(\n\t\t\tdata.map(async (student) => {\n\t\t\t\tconst extra = (await engine.evaluate(student)).context.extra as object;\n\t\t\t\tconst studentInfo = student as object;\n\t\t\t\tconst defaultExtra = {\n\t\t\t\t\tcandidateCU: false,\n\t\t\t\t\tcandidateDIDES: false,\n\t\t\t\t\tcandidateSchool: '',\n\t\t\t\t\tcandidateFaculty: '',\n\t\t\t\t};\n\t\t\t\treturn { ...studentInfo, ...defaultExtra, ...extra } as PostulantDto;\n\t\t\t})\n\t\t);\n\n\t\tconst skip = pageOptionsDto.skip;\n\t\tconst take = pageOptionsDto.take;\n\n\t\tconst itemCount = data.length;\n\n\t\tconst pageMetaDto = new PageMetaDto({\n\t\t\titemCount,\n\t\t\tpageOptionsDto,\n\t\t});\n\n\t\treturn new PageDto(results.slice(skip, skip + take), pageMetaDto);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ElectorDto.html":{"url":"classes/ElectorDto.html","title":"class - ElectorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ElectorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/dto/elector.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Student\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                currentEnrolledSemester\n                            \n                            \n                                    \n                                    Optional\n                                currentMajor\n                            \n                            \n                                    \n                                    Optional\n                                voteCU\n                            \n                            \n                                    \n                                    Optional\n                                voteDIDES\n                            \n                            \n                                    \n                                    Optional\n                                voteFaculty\n                            \n                            \n                                    \n                                    Optional\n                                voteSchool\n                            \n                            \n                                    \n                                estuCedula\n                            \n                            \n                                    \n                                estuNombre\n                            \n                            \n                                    \n                                estuStatusInscCode\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                majors\n                            \n                            \n                                    \n                                programCampCode\n                            \n                            \n                                    \n                                programLevelCode\n                            \n                            \n                                    \n                                sanctions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        currentEnrolledSemester\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EnrolledSemester\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current Enrolled Semester', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/dto/elector.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        currentMajor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Major\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current Major', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/dto/elector.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        voteCU\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Can vote for CU?', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/dto/elector.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        voteDIDES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Can vote for DIDES?', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/dto/elector.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        voteFaculty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Can vote for Faculty?', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/dto/elector.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        voteSchool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Can vote for School?', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/dto/elector.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estuCedula\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The DNI of the student', type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Student\n\n                            \n                        \n                    \n                        \n                                Defined in         Student:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estuNombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the student', type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Student\n\n                            \n                        \n                    \n                        \n                                Defined in         Student:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estuStatusInscCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Status Inscription', type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Student\n\n                            \n                        \n                    \n                        \n                                Defined in         Student:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the student', type: String, uniqueItems: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Student\n\n                            \n                        \n                    \n                        \n                                Defined in         Student:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        majors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Major[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of majors of the student', type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Student\n\n                            \n                        \n                    \n                        \n                                Defined in         Student:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        programCampCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Campus Code of the student', type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Student\n\n                            \n                        \n                    \n                        \n                                Defined in         Student:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        programLevelCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Level Code of the student', type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Student\n\n                            \n                        \n                    \n                        \n                                Defined in         Student:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sanctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sanction[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of sanctions of the student', type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Student\n\n                            \n                        \n                    \n                        \n                                Defined in         Student:53\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Student from '@entities/student/student.entity';\nimport EnrolledSemester from '@entities/student/enrolledSemester.entity';\nimport Major from '@entities/student/major.entity';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class ElectorDto extends Student {\n\t@ApiProperty({\n\t\tdescription: 'Can vote for CU?',\n\t\ttype: Boolean || undefined,\n\t})\n\tvoteCU?: boolean;\n\n\t@ApiProperty({\n\t\tdescription: 'Can vote for DIDES?',\n\t\ttype: Boolean || undefined,\n\t})\n\tvoteDIDES?: boolean;\n\n\t@ApiProperty({\n\t\tdescription: 'Can vote for School?',\n\t\ttype: String || undefined,\n\t})\n\tvoteSchool?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Can vote for Faculty?',\n\t\ttype: String || undefined,\n\t})\n\tvoteFaculty?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Current Major',\n\t\ttype: Major || undefined,\n\t})\n\tcurrentMajor?: Major;\n\n\t@ApiProperty({\n\t\tdescription: 'Current Enrolled Semester',\n\t\ttype: EnrolledSemester || undefined,\n\t})\n\tcurrentEnrolledSemester?: EnrolledSemester;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnrolledSemester.html":{"url":"classes/EnrolledSemester.html","title":"class - EnrolledSemester","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnrolledSemester\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/student/enrolledSemester.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                currentSemester\n                            \n                            \n                                    \n                                    \n                                endDate\n                            \n                            \n                                    \n                                enrolledUC\n                            \n                            \n                                    \n                                failedSubjects\n                            \n                            \n                                    \n                                semesterCode\n                            \n                            \n                                    \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        currentSemester\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Is Current Semester?', type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/enrolledSemester.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The end date of the semester', type: Date})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/enrolledSemester.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        enrolledUC\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The number of enrolled UC', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/enrolledSemester.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        failedSubjects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The number of failed subjects', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/enrolledSemester.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        semesterCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the enrolled semester', type: Number, uniqueItems: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/enrolledSemester.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The start date of the semester', type: Date})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/enrolledSemester.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\n\nexport default class EnrolledSemester {\n\t@ApiProperty({\n\t\tdescription: 'The id of the enrolled semester',\n\t\ttype: Number,\n\t\tuniqueItems: true,\n\t})\n\tsemesterCode: number;\n\n\t@ApiProperty({\n\t\tdescription: 'The number of failed subjects',\n\t\ttype: Number,\n\t})\n\tfailedSubjects: number;\n\n\t@ApiProperty({\n\t\tdescription: 'The number of enrolled UC',\n\t\ttype: Number,\n\t})\n\tenrolledUC: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Is Current Semester?',\n\t\ttype: Boolean,\n\t})\n\tcurrentSemester: boolean;\n\n\t@ApiProperty({\n\t\tdescription: 'The start date of the semester',\n\t\ttype: Date,\n\t})\n\t@Type(() => Date)\n\tstartDate: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The end date of the semester',\n\t\ttype: Date,\n\t})\n\t@Type(() => Date)\n\tendDate: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/controllers/health.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                https://docs.nestjs.com/recipes/terminus\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Public\n                        Async\n                        check\n                        \n                    \n                \n            \n            \n                \n                    \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('health')@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/base/controllers/health.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n\tHealthCheck,\n\tHealthCheckResult,\n\tHealthCheckService,\n\tHealthIndicatorResult,\n\tHttpHealthIndicator,\n} from '@nestjs/terminus';\n\n/**\n * https://docs.nestjs.com/recipes/terminus\n */\n@Controller()\nexport class HealthController {\n\tconstructor(private health: HealthCheckService, private http: HttpHealthIndicator) {}\n\n\t@Get('health')\n\t@HealthCheck()\n\tpublic async check(): Promise {\n\t\treturn this.health.check([\n\t\t\tasync (): Promise => this.http.pingCheck('dns', 'https://1.1.1.1'),\n\t\t]);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonDataService.html":{"url":"injectables/JsonDataService.html","title":"injectable - JsonDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JsonDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/providers/bd.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dataFilePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                readJsonFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readJsonFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    readJsonFile()\n                \n            \n\n\n            \n                \n                    Defined in src/common/providers/bd.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dataFilePath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : join(__dirname, '../../../public/data/students.json')\n                    \n                \n                    \n                        \n                                Defined in src/common/providers/bd.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { readFile } from 'fs/promises';\nimport { join } from 'path';\nimport Student from '@entities/student/student.entity';\n\n@Injectable()\nexport class JsonDataService {\n\t// dataFilePath is the public folder (/public/data/student.json)\n\tprivate readonly dataFilePath = join(__dirname, '../../../public/data/students.json');\n\tasync readJsonFile(): Promise {\n\t\ttry {\n\t\t\tconst fileContent = await readFile(this.dataFilePath, 'utf-8');\n\t\t\treturn JSON.parse(fileContent);\n\t\t} catch (error) {\n\t\t\tthrow new Error(`Error al leer el archivo JSON: ${error.message}`);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Major.html":{"url":"classes/Major.html","title":"class - Major","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Major\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/student/major.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                approvedUC\n                            \n                            \n                                    \n                                currentEnrolledSemester\n                            \n                            \n                                    \n                                currentSemester\n                            \n                            \n                                    \n                                currentSemesterUC\n                            \n                            \n                                    \n                                    \n                                endDate\n                            \n                            \n                                    \n                                enrolledSemesters\n                            \n                            \n                                    \n                                facultyCode\n                            \n                            \n                                    \n                                hasRepeatedSemester\n                            \n                            \n                                    \n                                majorCode\n                            \n                            \n                                    \n                                    \n                                startDate\n                            \n                            \n                                    \n                                years\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        approvedUC\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Number of Approved UC', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/major.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        currentEnrolledSemester\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EnrolledSemester\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The actual enrolled semester', type: EnrolledSemester})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/major.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        currentSemester\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current Semester based on the Approved UC', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/major.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        currentSemesterUC\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'UC that the current semester should have', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/major.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The End Date of the major', type: Date})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/major.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        enrolledSemesters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EnrolledSemester[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The list of enrolled semesters', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/major.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        facultyCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The code of the faculty', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/major.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hasRepeatedSemester\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Has repeated Semester?', type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/major.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        majorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the major', type: String, uniqueItems: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/major.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The Start Date of the major', type: Date})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/major.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        years\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Number of years of the student', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/major.entity.ts:66\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport EnrolledSemester from './enrolledSemester.entity';\nimport { Type } from 'class-transformer';\nexport default class Major {\n\t@ApiProperty({\n\t\tdescription: 'The id of the major',\n\t\ttype: String,\n\t\tuniqueItems: true,\n\t})\n\tmajorCode: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The code of the faculty',\n\t\ttype: String,\n\t})\n\tfacultyCode: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The Start Date of the major',\n\t\ttype: Date,\n\t})\n\t@Type(() => Date)\n\tstartDate: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The End Date of the major',\n\t\ttype: Date,\n\t})\n\t@Type(() => Date)\n\tendDate: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'Number of Approved UC',\n\t\ttype: Number,\n\t})\n\tapprovedUC: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Current Semester based on the Approved UC',\n\t\ttype: Number,\n\t})\n\tcurrentSemester: number;\n\n\t@ApiProperty({\n\t\tdescription: 'UC that the current semester should have',\n\t\ttype: Number,\n\t})\n\tcurrentSemesterUC: number;\n\n\t@ApiProperty({\n\t\tdescription: 'The list of enrolled semesters',\n\t\ttype: [EnrolledSemester],\n\t})\n\tenrolledSemesters: EnrolledSemester[];\n\n\t@ApiProperty({\n\t\tdescription: 'The actual enrolled semester',\n\t\ttype: EnrolledSemester,\n\t})\n\tcurrentEnrolledSemester: EnrolledSemester;\n\n\t@ApiProperty({\n\t\tdescription: 'Number of years of the student',\n\t\ttype: Number,\n\t})\n\tyears: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Has repeated Semester?',\n\t\ttype: Boolean,\n\t})\n\thasRepeatedSemester: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageDto.html":{"url":"classes/PageDto.html","title":"class - PageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                data\n                            \n                            \n                                    \n                                    Readonly\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T[], meta: PageMetaDto)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page.dto.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PageMetaDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({isArray: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageMetaDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => PageMetaDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\nimport { PageMetaDto } from './page-meta.dto';\n\nexport class PageDto {\n\t@IsArray()\n\t@ApiProperty({ isArray: true })\n\treadonly data: T[];\n\n\t@ApiProperty({ type: () => PageMetaDto })\n\treadonly meta: PageMetaDto;\n\n\tconstructor(data: T[], meta: PageMetaDto) {\n\t\tthis.data = data;\n\t\tthis.meta = meta;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageMetaDto.html":{"url":"classes/PageMetaDto.html","title":"class - PageMetaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageMetaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-meta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                hasNextPage\n                            \n                            \n                                    \n                                    Readonly\n                                hasPreviousPage\n                            \n                            \n                                    \n                                    Readonly\n                                itemCount\n                            \n                            \n                                    \n                                    Readonly\n                                page\n                            \n                            \n                                    \n                                    Readonly\n                                pageCount\n                            \n                            \n                                    \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: PageMetaDtoParameters)\n                    \n                \n                        \n                            \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        PageMetaDtoParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        hasPreviousPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        itemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        pageCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-meta.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { PageMetaDtoParameters } from '../interfaces';\n\nexport class PageMetaDto {\n\t@ApiProperty()\n\treadonly page: number;\n\n\t@ApiProperty()\n\treadonly take: number;\n\n\t@ApiProperty()\n\treadonly itemCount: number;\n\n\t@ApiProperty()\n\treadonly pageCount: number;\n\n\t@ApiProperty()\n\treadonly hasPreviousPage: boolean;\n\n\t@ApiProperty()\n\treadonly hasNextPage: boolean;\n\n\tconstructor({ pageOptionsDto, itemCount }: PageMetaDtoParameters) {\n\t\tthis.page = pageOptionsDto.page;\n\t\tthis.take = pageOptionsDto.take;\n\t\tthis.itemCount = itemCount;\n\t\tthis.pageCount = Math.ceil(this.itemCount / this.take);\n\t\tthis.hasPreviousPage = this.page > 1;\n\t\tthis.hasNextPage = this.page \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageMetaDtoParameters.html":{"url":"interfaces/PageMetaDtoParameters.html","title":"interface - PageMetaDtoParameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PageMetaDtoParameters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/page-meta-dto-parameters.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            itemCount\n                                        \n                                \n                                \n                                        \n                                            pageOptionsDto\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        itemCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageOptionsDto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageOptionsDto:         PageOptionsDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PageOptionsDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PageOptionsDto } from '../dtos';\n\nexport interface PageMetaDtoParameters {\n\tpageOptionsDto: PageOptionsDto;\n\titemCount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageOptionsDto.html":{"url":"classes/PageOptionsDto.html","title":"class - PageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/page-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                order\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Default value : Order.ASC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Order, default: undefined})@IsEnum(Order)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 50, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(50)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/page-options.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in src/common/dtos/page-options.dto.ts:34\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsEnum, IsInt, IsOptional, Max, Min } from 'class-validator';\nimport { Order } from '../constants';\n\nexport class PageOptionsDto {\n\t@ApiPropertyOptional({ enum: Order, default: Order.ASC })\n\t@IsEnum(Order)\n\t@IsOptional()\n\treadonly order?: Order = Order.ASC;\n\n\t@ApiPropertyOptional({\n\t\tminimum: 1,\n\t\tdefault: 1,\n\t})\n\t@Type(() => Number)\n\t@IsInt()\n\t@Min(1)\n\t@IsOptional()\n\treadonly page?: number = 1;\n\n\t@ApiPropertyOptional({\n\t\tminimum: 1,\n\t\tmaximum: 50,\n\t\tdefault: 10,\n\t})\n\t@Type(() => Number)\n\t@IsInt()\n\t@Min(1)\n\t@Max(50)\n\t@IsOptional()\n\treadonly take?: number = 10;\n\n\tget skip(): number {\n\t\treturn (this.page - 1) * this.take;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResult.html":{"url":"classes/PaginatedResult.html","title":"class - PaginatedResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/utils/pagination/paginate.ts\n        \n\n\n            \n                Description\n            \n            \n                Paginated result containing a subset of data along with pagination information\n\n            \n\n            \n                Extends\n            \n            \n                        Pagination\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                skippedItems\n                            \n                            \n                                totalPages\n                            \n                            \n                                data\n                            \n                            \n                                limit\n                            \n                            \n                                    Optional\n                                next\n                            \n                            \n                                page\n                            \n                            \n                                    Optional\n                                previous\n                            \n                            \n                                totalCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNextPage\n                            \n                            \n                                getPreviousPage\n                            \n                            \n                                hasNextPage\n                            \n                            \n                                hasPreviousPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T[], page: number, limit: number, totalCount: number, host: string)\n                    \n                \n                        \n                            \n                                Defined in src/common/utils/pagination/paginate.ts:60\n                            \n                        \n\n                \n                    \n                            Constructor for creating a new PaginatedResult object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe subset of data being returned\n\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe current page number\n\n\n                                                        \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe maximum number of items per page\n\n\n                                                        \n                                                \n                                                \n                                                        totalCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe total number of items across all pages\n\n\n                                                        \n                                                \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe host URL for the API\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        skippedItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/utils/pagination/paginate.ts:28\n                        \n                    \n\n            \n                \n                    The number of items skipped in the current page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/utils/pagination/paginate.ts:26\n                        \n                    \n\n            \n                \n                    The total number of pages in the paginated data set\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Pagination\n\n                            \n                        \n                    \n                        \n                                Defined in         Pagination:7\n\n                        \n                    \n\n            \n                \n                    The subset of data being returned\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Pagination\n\n                            \n                        \n                    \n                        \n                                Defined in         Pagination:11\n\n                        \n                    \n\n            \n                \n                    The maximum number of items per page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        next\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Pagination\n\n                            \n                        \n                    \n                        \n                                Defined in         Pagination:15\n\n                        \n                    \n\n            \n                \n                    URL for the next page of data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Pagination\n\n                            \n                        \n                    \n                        \n                                Defined in         Pagination:9\n\n                        \n                    \n\n            \n                \n                    The current page number\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        previous\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Pagination\n\n                            \n                        \n                    \n                        \n                                Defined in         Pagination:17\n\n                        \n                    \n\n            \n                \n                    URL for the previous page of data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Pagination\n\n                            \n                        \n                    \n                        \n                                Defined in         Pagination:13\n\n                        \n                    \n\n            \n                \n                    The total number of items across all pages\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getNextPage\n                        \n                    \n                \n            \n            \n                \ngetNextPage()\n                \n            \n\n\n            \n                \n                    Defined in src/common/utils/pagination/paginate.ts:50\n                \n            \n\n\n            \n                \n                    Gets the URL for the next page of data\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \nThe URL for the next page of data\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPreviousPage\n                        \n                    \n                \n            \n            \n                \ngetPreviousPage()\n                \n            \n\n\n            \n                \n                    Defined in src/common/utils/pagination/paginate.ts:58\n                \n            \n\n\n            \n                \n                    Gets the URL for the previous page of data\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \nThe URL for the previous page of data\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasNextPage\n                        \n                    \n                \n            \n            \n                \nhasNextPage()\n                \n            \n\n\n            \n                \n                    Defined in src/common/utils/pagination/paginate.ts:34\n                \n            \n\n\n            \n                \n                    Determines if there is a next page of data available\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \nTrue if there is a next page, false otherwise\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasPreviousPage\n                        \n                    \n                \n            \n            \n                \nhasPreviousPage()\n                \n            \n\n\n            \n                \n                    Defined in src/common/utils/pagination/paginate.ts:42\n                \n            \n\n\n            \n                \n                    Determines if there is a previous page of data available\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \nTrue if there is a previous page, false otherwise\n\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Pagination {\n\t/** The subset of data being returned */\n\tdata: T[];\n\t/** The current page number */\n\tpage: number;\n\t/** The maximum number of items per page */\n\tlimit: number;\n\t/** The total number of items across all pages */\n\ttotalCount: number;\n\t/** URL for the next page of data */\n\tnext?: string;\n\t/** URL for the previous page of data */\n\tprevious?: string;\n}\n\n/**\n * Paginated result containing a subset of data along with pagination information\n * @template T - The type of data being paginated\n */\nexport class PaginatedResult extends Pagination {\n\t/** The total number of pages in the paginated data set */\n\ttotalPages: number;\n\t/** The number of items skipped in the current page */\n\tskippedItems: number;\n\n\t/**\n\t * Determines if there is a next page of data available\n\t * @returns {boolean} - True if there is a next page, false otherwise\n\t */\n\thasNextPage(): boolean {\n\t\treturn this.page  1;\n\t}\n\n\t/**\n\t * Gets the URL for the next page of data\n\t * @returns {string} - The URL for the next page of data\n\t */\n\tgetNextPage(): string {\n\t\treturn `?page=${this.page + 1}&limit=${this.limit}`;\n\t}\n\n\t/**\n\t * Gets the URL for the previous page of data\n\t * @returns {string} - The URL for the previous page of data\n\t */\n\tgetPreviousPage(): string {\n\t\treturn `?page=${this.page - 1}&limit=${this.limit}`;\n\t}\n\n\t/**\n\t * Constructor for creating a new PaginatedResult object\n\t * @param {T[]} data - The subset of data being returned\n\t * @param {number} page - The current page number\n\t * @param {number} limit - The maximum number of items per page\n\t * @param {number} totalCount - The total number of items across all pages\n\t * @param {string} host - The host URL for the API\n\t */\n\tconstructor(data: T[], page: number, limit: number, totalCount: number, host = 'http://localhost:3000') {\n\t\tsuper();\n\t\tthis.data = data;\n\t\tthis.page = page;\n\t\tthis.limit = limit;\n\t\tthis.totalCount = totalCount;\n\t\tthis.totalPages = Math.ceil(totalCount / limit);\n\t\tthis.skippedItems = (page - 1) * limit;\n\t\tthis.previous = null;\n\t\tthis.next = null;\n\t\tif (this.hasPreviousPage()) {\n\t\t\tthis.previous = `${host}${this.getPreviousPage()}`;\n\t\t}\n\t\tif (this.hasNextPage()) {\n\t\t\tthis.next = `${host}${this.getNextPage()}`;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/utils/pagination/paginate.ts\n        \n\n\n            \n                Description\n            \n            \n                Pagination object for retrieving a subset of data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                limit\n                            \n                            \n                                    Optional\n                                next\n                            \n                            \n                                page\n                            \n                            \n                                    Optional\n                                previous\n                            \n                            \n                                totalCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                    \n                        \n                                Defined in src/common/utils/pagination/paginate.ts:7\n                        \n                    \n\n            \n                \n                    The subset of data being returned\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/utils/pagination/paginate.ts:11\n                        \n                    \n\n            \n                \n                    The maximum number of items per page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        next\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/utils/pagination/paginate.ts:15\n                        \n                    \n\n            \n                \n                    URL for the next page of data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/utils/pagination/paginate.ts:9\n                        \n                    \n\n            \n                \n                    The current page number\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        previous\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/utils/pagination/paginate.ts:17\n                        \n                    \n\n            \n                \n                    URL for the previous page of data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/utils/pagination/paginate.ts:13\n                        \n                    \n\n            \n                \n                    The total number of items across all pages\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Pagination {\n\t/** The subset of data being returned */\n\tdata: T[];\n\t/** The current page number */\n\tpage: number;\n\t/** The maximum number of items per page */\n\tlimit: number;\n\t/** The total number of items across all pages */\n\ttotalCount: number;\n\t/** URL for the next page of data */\n\tnext?: string;\n\t/** URL for the previous page of data */\n\tprevious?: string;\n}\n\n/**\n * Paginated result containing a subset of data along with pagination information\n * @template T - The type of data being paginated\n */\nexport class PaginatedResult extends Pagination {\n\t/** The total number of pages in the paginated data set */\n\ttotalPages: number;\n\t/** The number of items skipped in the current page */\n\tskippedItems: number;\n\n\t/**\n\t * Determines if there is a next page of data available\n\t * @returns {boolean} - True if there is a next page, false otherwise\n\t */\n\thasNextPage(): boolean {\n\t\treturn this.page  1;\n\t}\n\n\t/**\n\t * Gets the URL for the next page of data\n\t * @returns {string} - The URL for the next page of data\n\t */\n\tgetNextPage(): string {\n\t\treturn `?page=${this.page + 1}&limit=${this.limit}`;\n\t}\n\n\t/**\n\t * Gets the URL for the previous page of data\n\t * @returns {string} - The URL for the previous page of data\n\t */\n\tgetPreviousPage(): string {\n\t\treturn `?page=${this.page - 1}&limit=${this.limit}`;\n\t}\n\n\t/**\n\t * Constructor for creating a new PaginatedResult object\n\t * @param {T[]} data - The subset of data being returned\n\t * @param {number} page - The current page number\n\t * @param {number} limit - The maximum number of items per page\n\t * @param {number} totalCount - The total number of items across all pages\n\t * @param {string} host - The host URL for the API\n\t */\n\tconstructor(data: T[], page: number, limit: number, totalCount: number, host = 'http://localhost:3000') {\n\t\tsuper();\n\t\tthis.data = data;\n\t\tthis.page = page;\n\t\tthis.limit = limit;\n\t\tthis.totalCount = totalCount;\n\t\tthis.totalPages = Math.ceil(totalCount / limit);\n\t\tthis.skippedItems = (page - 1) * limit;\n\t\tthis.previous = null;\n\t\tthis.next = null;\n\t\tif (this.hasPreviousPage()) {\n\t\t\tthis.previous = `${host}${this.getPreviousPage()}`;\n\t\t}\n\t\tif (this.hasNextPage()) {\n\t\t\tthis.next = `${host}${this.getNextPage()}`;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PostulantDto.html":{"url":"classes/PostulantDto.html","title":"class - PostulantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PostulantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/dto/postulant.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Student\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                candidateCU\n                            \n                            \n                                    \n                                    Optional\n                                candidateDIDES\n                            \n                            \n                                    \n                                    Optional\n                                candidateFaculty\n                            \n                            \n                                    \n                                    Optional\n                                candidateSchool\n                            \n                            \n                                    \n                                    Optional\n                                currentMajor\n                            \n                            \n                                    \n                                    Optional\n                                lastSanction\n                            \n                            \n                                    \n                                estuCedula\n                            \n                            \n                                    \n                                estuNombre\n                            \n                            \n                                    \n                                estuStatusInscCode\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                majors\n                            \n                            \n                                    \n                                programCampCode\n                            \n                            \n                                    \n                                programLevelCode\n                            \n                            \n                                    \n                                sanctions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        candidateCU\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Can be postulant for CU?', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/dto/postulant.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        candidateDIDES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Can be postulant for DIDES?', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/dto/postulant.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        candidateFaculty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Can be postulant for Faculty?', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/dto/postulant.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        candidateSchool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Can be postulant for School?', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/dto/postulant.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        currentMajor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Major\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current Major', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/dto/postulant.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        lastSanction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sanction\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Last Sanction', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/dto/postulant.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estuCedula\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The DNI of the student', type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Student\n\n                            \n                        \n                    \n                        \n                                Defined in         Student:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estuNombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the student', type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Student\n\n                            \n                        \n                    \n                        \n                                Defined in         Student:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estuStatusInscCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Status Inscription', type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Student\n\n                            \n                        \n                    \n                        \n                                Defined in         Student:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the student', type: String, uniqueItems: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Student\n\n                            \n                        \n                    \n                        \n                                Defined in         Student:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        majors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Major[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of majors of the student', type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Student\n\n                            \n                        \n                    \n                        \n                                Defined in         Student:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        programCampCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Campus Code of the student', type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Student\n\n                            \n                        \n                    \n                        \n                                Defined in         Student:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        programLevelCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Level Code of the student', type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Student\n\n                            \n                        \n                    \n                        \n                                Defined in         Student:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sanctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sanction[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of sanctions of the student', type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Student\n\n                            \n                        \n                    \n                        \n                                Defined in         Student:53\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Student from '@entities/student/student.entity';\nimport Sanction from '@entities/student/sanction.entity';\nimport Major from '@entities/student/major.entity';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class PostulantDto extends Student {\n\t@ApiProperty({\n\t\tdescription: 'Can be postulant for CU?',\n\t\ttype: Boolean || undefined,\n\t})\n\tcandidateCU?: boolean;\n\n\t@ApiProperty({\n\t\tdescription: 'Can be postulant for DIDES?',\n\t\ttype: Boolean || undefined,\n\t})\n\tcandidateDIDES?: boolean;\n\n\t@ApiProperty({\n\t\tdescription: 'Can be postulant for School?',\n\t\ttype: String || undefined,\n\t})\n\tcandidateSchool?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Can be postulant for Faculty?',\n\t\ttype: String || undefined,\n\t})\n\tcandidateFaculty?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Current Major',\n\t\ttype: Major || undefined,\n\t})\n\tcurrentMajor?: Major;\n\n\t@ApiProperty({\n\t\tdescription: 'Last Sanction',\n\t\ttype: Sanction || undefined,\n\t})\n\tlastSanction?: Sanction;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestService.html":{"url":"injectables/RequestService.html","title":"injectable - RequestService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/providers/requests.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/common/providers/requests.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRequest\n                        \n                    \n                \n            \n            \n                \ngetRequest()\n                \n            \n\n\n            \n                \n                    Defined in src/common/providers/requests.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Request\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Scope } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class RequestService {\n\tconstructor(@Inject(REQUEST) private readonly request: Request) {}\n\n\tgetRequest(): Request {\n\t\treturn this.request;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sanction.html":{"url":"classes/Sanction.html","title":"class - Sanction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sanction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/student/sanction.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                endDate\n                            \n                            \n                                    \n                                sanctionCode\n                            \n                            \n                                    \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'End Date of the sanction', type: undefined})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/sanction.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sanctionCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the sanction', type: String, uniqueItems: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/sanction.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Start Date of the sanction', type: Date})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/sanction.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\n\nexport default class Sanction {\n\t@ApiProperty({\n\t\tdescription: 'The id of the sanction',\n\t\ttype: String,\n\t\tuniqueItems: true,\n\t})\n\tsanctionCode: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Start Date of the sanction',\n\t\ttype: Date,\n\t})\n\t@Type(() => Date)\n\tstartDate: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'End Date of the sanction',\n\t\ttype: Date || undefined,\n\t})\n\t@Type(() => Date)\n\tendDate?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Student.html":{"url":"classes/Student.html","title":"class - Student","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/student/student.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                estuCedula\n                            \n                            \n                                    \n                                estuNombre\n                            \n                            \n                                    \n                                estuStatusInscCode\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                majors\n                            \n                            \n                                    \n                                programCampCode\n                            \n                            \n                                    \n                                programLevelCode\n                            \n                            \n                                    \n                                sanctions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estuCedula\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The DNI of the student', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/student.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estuNombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the student', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/student.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estuStatusInscCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Status Inscription', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/student.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the student', type: String, uniqueItems: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/student.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        majors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Major[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of majors of the student', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/student.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        programCampCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Campus Code of the student', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/student.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        programLevelCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Level Code of the student', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/student.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sanctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sanction[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of sanctions of the student', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/student/student.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport Major from './major.entity';\nimport Sanction from './sanction.entity';\n\nexport default class Student {\n\t@ApiProperty({\n\t\tdescription: 'The id of the student',\n\t\ttype: String,\n\t\tuniqueItems: true,\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the student',\n\t\ttype: String,\n\t})\n\testuNombre: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The DNI of the student',\n\t\ttype: String,\n\t})\n\testuCedula: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Status Inscription',\n\t\ttype: String,\n\t})\n\testuStatusInscCode: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Level Code of the student',\n\t\ttype: String,\n\t})\n\tprogramLevelCode: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Campus Code of the student',\n\t\ttype: String,\n\t})\n\tprogramCampCode: string;\n\n\t@ApiProperty({\n\t\tdescription: 'List of majors of the student',\n\t\ttype: [Major],\n\t})\n\tmajors: Major[];\n\n\t@ApiProperty({\n\t\tdescription: 'List of sanctions of the student',\n\t\ttype: [Sanction],\n\t})\n\tsanctions: Sanction[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudentsController.html":{"url":"controllers/StudentsController.html","title":"controller - StudentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/controllers/student.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllElectors\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllPostulants\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                uploadElectorEngine\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                uploadPostulantEngine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@HttpCode(HttpStatus.OK)@ApiPaginatedResponse(Student)\n                \n            \n\n            \n                \n                    Defined in src/student/controllers/student.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAllElectors\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllElectors(pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(undefined.electors)@HttpCode(HttpStatus.OK)@ApiPaginatedResponse(Student)\n                \n            \n\n            \n                \n                    Defined in src/student/controllers/student.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAllPostulants\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllPostulants(pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(undefined.postulants)@HttpCode(HttpStatus.OK)@ApiPaginatedResponse(Student)\n                \n            \n\n            \n                \n                    Defined in src/student/controllers/student.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        Public\n                        Async\n                        uploadElectorEngine\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadElectorEngine(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(undefined.uploadEngineElectors)@ApiConsumes('multipart/form-data')@ApiResponse({status: undefined, description: undefined})@ApiBody({description: 'TSBR File', schema: undefined})@UseInterceptors(undefined)@HttpCode(HttpStatus.CREATED)\n                \n            \n\n            \n                \n                    Defined in src/student/controllers/student.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        Public\n                        Async\n                        uploadPostulantEngine\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadPostulantEngine(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(undefined.uploadEnginePostulants)@ApiConsumes('multipart/form-data')@ApiResponse({status: undefined, description: undefined})@ApiBody({description: 'TSBR File', schema: undefined})@UseInterceptors(undefined)@HttpCode(HttpStatus.CREATED)\n                \n            \n\n            \n                \n                    Defined in src/student/controllers/student.controller.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n\tController,\n\tGet,\n\tPost,\n\tQuery,\n\tHttpStatus,\n\tUseInterceptors,\n\tClassSerializerInterceptor,\n\tUploadedFile,\n\tParseFilePipe,\n\tMaxFileSizeValidator,\n\tLogger,\n\tHttpCode,\n\tUnsupportedMediaTypeException,\n\tBadRequestException,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { DataService } from '../services/student.service';\nimport { PageDto, PageOptionsDto } from '@common/dtos';\nimport Student from '@entities/student/student.entity';\nimport { URLS } from '@common/constants';\nimport { ApiBody, ApiConsumes, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { PostulantDto, ElectorDto } from '../dto';\nimport { ApiPaginatedResponse, MESSAGES } from '@common/utils';\nimport { Engine } from 'typescript-business-rules-engine';\nimport { unlink } from 'fs';\nimport { diskStorage } from 'multer';\n\n@Controller(URLS.STUDENTS.base)\n@ApiTags('Students')\n@UseInterceptors(ClassSerializerInterceptor)\nexport class StudentsController {\n\tconstructor(private readonly studentsService: DataService) {}\n\n\t// list all Students\n\t@Get('/')\n\t@HttpCode(HttpStatus.OK)\n\t@ApiPaginatedResponse(Student)\n\tasync findAll(@Query() pageOptionsDto: PageOptionsDto): Promise> {\n\t\treturn this.studentsService.findAll(pageOptionsDto);\n\t}\n\n\t// list all Electors\n\t@Get(URLS.STUDENTS.electors)\n\t@HttpCode(HttpStatus.OK)\n\t@ApiPaginatedResponse(Student)\n\tasync findAllElectors(@Query() pageOptionsDto: PageOptionsDto): Promise> {\n\t\treturn this.studentsService.findAllElectors(pageOptionsDto);\n\t}\n\n\t// list all Postulants\n\t@Get(URLS.STUDENTS.postulants)\n\t@HttpCode(HttpStatus.OK)\n\t@ApiPaginatedResponse(Student)\n\tasync findAllPostulants(@Query() pageOptionsDto: PageOptionsDto): Promise> {\n\t\treturn this.studentsService.findAllPostulants(pageOptionsDto);\n\t}\n\n\t@Post(URLS.STUDENTS.uploadEngineElectors)\n\t@ApiConsumes('multipart/form-data')\n\t@ApiResponse({\n\t\tstatus: HttpStatus.CREATED,\n\t\tdescription: MESSAGES.CREATED,\n\t})\n\t@ApiBody({\n\t\tdescription: 'TSBR File',\n\t\tschema: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tfile: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tformat: 'binary',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t})\n\t@UseInterceptors(\n\t\tFileInterceptor('file', {\n\t\t\tstorage: diskStorage({\n\t\t\t\tdestination: `${__dirname}/../../../public/engines/elector/`,\n\t\t\t\tfilename: (req, file, cb) => {\n\t\t\t\t\tconst fileNameSplit = file.originalname.split('.');\n\t\t\t\t\tconst fileExtension = fileNameSplit[fileNameSplit.length - 1];\n\t\t\t\t\tcb(null, `rules.${fileExtension}`);\n\t\t\t\t},\n\t\t\t}),\n\t\t\tfileFilter: (req, file, cb) => {\n\t\t\t\tconst fileNameSplit = file.originalname.split('.');\n\t\t\t\tconst fileExtension = fileNameSplit[fileNameSplit.length - 1];\n\t\t\t\tif (fileExtension !== 'tsbr') {\n\t\t\t\t\tcb(new UnsupportedMediaTypeException('File extension is not valid. Only .tsbr files are allowed'), false);\n\t\t\t\t}\n\t\t\t\tcb(null, true);\n\t\t\t},\n\t\t})\n\t)\n\t@HttpCode(HttpStatus.CREATED)\n\tpublic async uploadElectorEngine(\n\t\t@UploadedFile(\n\t\t\tnew ParseFilePipe({\n\t\t\t\tvalidators: [new MaxFileSizeValidator({ maxSize: 1024 * 1024 * 10 })],\n\t\t\t})\n\t\t)\n\t\tfile: Express.Multer.File\n\t): Promise {\n\t\ttry {\n\t\t\tawait Engine.import(file.path);\n\t\t} catch (e) {\n\t\t\tLogger.error(e, 'ProjectsController.uploadFile');\n\t\t\t// Delete the file\n\t\t\tunlink(file.path, (err) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tLogger.error(err, 'ProjectsController.uploadFile');\n\t\t\t\t}\n\t\t\t});\n\t\t\tthrow new BadRequestException('Error Loading File: Invalid TypeScript Business Rules file');\n\t\t}\n\t}\n\n\t@Post(URLS.STUDENTS.uploadEnginePostulants)\n\t@ApiConsumes('multipart/form-data')\n\t@ApiResponse({\n\t\tstatus: HttpStatus.CREATED,\n\t\tdescription: MESSAGES.CREATED,\n\t})\n\t@ApiBody({\n\t\tdescription: 'TSBR File',\n\t\tschema: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tfile: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tformat: 'binary',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t})\n\t@UseInterceptors(\n\t\tFileInterceptor('file', {\n\t\t\tstorage: diskStorage({\n\t\t\t\tdestination: `${__dirname}/../../../public/engines/postulant/`,\n\t\t\t\tfilename: (req, file, cb) => {\n\t\t\t\t\tconst fileNameSplit = file.originalname.split('.');\n\t\t\t\t\tconst fileExtension = fileNameSplit[fileNameSplit.length - 1];\n\t\t\t\t\tcb(null, `rules.${fileExtension}`);\n\t\t\t\t},\n\t\t\t}),\n\t\t\tfileFilter: (req, file, cb) => {\n\t\t\t\tconst fileNameSplit = file.originalname.split('.');\n\t\t\t\tconst fileExtension = fileNameSplit[fileNameSplit.length - 1];\n\t\t\t\tif (fileExtension !== 'tsbr') {\n\t\t\t\t\tcb(new UnsupportedMediaTypeException('File extension is not valid. Only .tsbr files are allowed'), false);\n\t\t\t\t}\n\t\t\t\tcb(null, true);\n\t\t\t},\n\t\t})\n\t)\n\t@HttpCode(HttpStatus.CREATED)\n\tpublic async uploadPostulantEngine(\n\t\t@UploadedFile(\n\t\t\tnew ParseFilePipe({\n\t\t\t\tvalidators: [new MaxFileSizeValidator({ maxSize: 1024 * 1024 * 10 })],\n\t\t\t})\n\t\t)\n\t\tfile: Express.Multer.File\n\t): Promise {\n\t\ttry {\n\t\t\tawait Engine.import(file.path);\n\t\t} catch (e) {\n\t\t\tLogger.error(e, 'ProjectsController.uploadFile');\n\t\t\t// Delete the file\n\t\t\tunlink(file.path, (err) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tLogger.error(err, 'ProjectsController.uploadFile');\n\t\t\t\t}\n\t\t\t});\n\t\t\tthrow new BadRequestException('Error Loading File: Invalid TypeScript Business Rules file');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentsModule.html":{"url":"modules/StudentsModule.html","title":"module - StudentsModule","body":"\n                   \n\n\n\n\n    Modules\n    StudentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentsModule\n\n\n\ncluster_StudentsModule_providers\n\n\n\n\nDataService\n\nDataService\n\n\n\nStudentsModule\n\nStudentsModule\n\nStudentsModule -->\n\nDataService->StudentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/student/student.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DataService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudentsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DataService } from './services/student.service';\nimport { StudentsController } from './controllers/student.controller';\nimport { MulterModule } from '@nestjs/platform-express';\n@Module({\n\timports: [\n\t\tMulterModule.register({\n\t\t\tdest: `${__dirname}/../../public/engines/`,\n\t\t}),\n\t],\n\tcontrollers: [StudentsController],\n\tproviders: [DataService],\n})\nexport class StudentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilService.html":{"url":"injectables/UtilService.html","title":"injectable - UtilService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UtilService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/providers/util.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isKeyOfSchema\n                            \n                            \n                                    Public\n                                line\n                            \n                            \n                                    Public\n                                pre\n                            \n                            \n                                    Public\n                                removeUndefined\n                            \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isKeyOfSchema\n                        \n                    \n                \n            \n            \n                \n                    \n                    isKeyOfSchema(key, schema: T)\n                \n            \n\n\n            \n                \n                    Defined in src/common/providers/util.service.ts:32\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schema\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        line\n                        \n                    \n                \n            \n            \n                \n                    \n                    line(templateData: TemplateStringsArray, param: TemplateParameter)\n                \n            \n\n\n            \n                \n                    Defined in src/common/providers/util.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    templateData\n                                    \n                                            TemplateStringsArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                TemplateParameter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        pre\n                        \n                    \n                \n            \n            \n                \n                    \n                    pre(templateData: TemplateStringsArray, param: TemplateParameter)\n                \n            \n\n\n            \n                \n                    Defined in src/common/providers/util.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    templateData\n                                    \n                                            TemplateStringsArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                TemplateParameter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeUndefined\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUndefined(argv: T)\n                \n            \n\n\n            \n                \n                    Defined in src/common/providers/util.service.ts:36\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argv\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        template\n                        \n                    \n                \n            \n            \n                \n                    \n                    template(templateData: TemplateStringsArray, param: T[], delimiter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/providers/util.service.ts:8\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    templateData\n                                    \n                                            TemplateStringsArray\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    param\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    delimiter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '\\n'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype TemplateParameter = any[];\n\n@Injectable()\nexport class UtilService {\n\tpublic template(templateData: TemplateStringsArray, param: T[], delimiter = '\\n'): string {\n\t\tlet output = '';\n\t\tfor (let i = 0; i  text.replace(/^\\s+/gm, ''))\n\t\t\t.join(delimiter)\n\t\t\t.trim();\n\t}\n\n\tpublic pre(templateData: TemplateStringsArray, ...param: TemplateParameter): string {\n\t\treturn this.template(templateData, param, '\\n');\n\t}\n\n\tpublic line(templateData: TemplateStringsArray, ...param: TemplateParameter): string {\n\t\treturn this.template(templateData, param, ' ');\n\t}\n\n\tpublic isKeyOfSchema(key: unknown, schema: T): key is keyof T {\n\t\treturn typeof key === 'string' && key in schema;\n\t}\n\n\tpublic removeUndefined(argv: T): Record {\n\t\t// https://stackoverflow.com/questions/25421233\n\t\t// JSON.parse(JSON.stringify(args));\n\t\treturn Object.fromEntries(Object.entries(argv).filter(([, value]: [string, unknown]) => value !== undefined));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                bin/generateFakeStudents.ts\n            \n            function\n            generateFakeStudents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                bin/generateFakeStudents.ts\n            \n            function\n            randomEnrolledSemester\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                bin/generateFakeStudents.ts\n            \n            function\n            randomMajor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                bin/generateFakeStudents.ts\n            \n            function\n            randomSanction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                bin/generateFakeStudents.ts\n            \n            function\n            randomStudent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                bin/generateFakeStudents.ts\n            \n            variable\n            currentSemesterUC\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                bin/generateFakeStudents.ts\n            \n            variable\n            ingressStatus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                bin/generateFakeStudents.ts\n            \n            variable\n            major\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                bin/generateFakeStudents.ts\n            \n            variable\n            program\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                bin/generateFakeStudents.ts\n            \n            variable\n            semester\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.middleware.ts\n            \n            function\n            middleware\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/base/controllers/health.controller.ts\n            \n            controller\n            HealthController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/common.module.ts\n            \n            variable\n            services\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants/urls.ts\n            \n            variable\n            URLS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dtos/page-meta.dto.ts\n            \n            class\n            PageMetaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/dtos/page-options.dto.ts\n            \n            class\n            PageOptionsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/dtos/page.dto.ts\n            \n            class\n            PageDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/filters/exceptions.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interfaces/page-meta-dto-parameters.interface.ts\n            \n            interface\n            PageMetaDtoParameters\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/providers/bd.service.ts\n            \n            injectable\n            JsonDataService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/providers/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/providers/requests.service.ts\n            \n            injectable\n            RequestService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/providers/util.service.ts\n            \n            injectable\n            UtilService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/utils/context/index.ts\n            \n            variable\n            exportContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/utils/context/index.ts\n            \n            variable\n            importContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/utils/pagination/decorators.ts\n            \n            function\n            PaginateQueryOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/utils/pagination/decorators.ts\n            \n            variable\n            ApiPaginatedResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/utils/pagination/paginate.ts\n            \n            class\n            PaginatedResult\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/common/utils/pagination/paginate.ts\n            \n            class\n            Pagination\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            util\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/envs/default.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/envs/development.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/envs/production.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/envs/test.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/student/enrolledSemester.entity.ts\n            \n            class\n            EnrolledSemester\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/entities/student/major.entity.ts\n            \n            class\n            Major\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/entities/student/sanction.entity.ts\n            \n            class\n            Sanction\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/entities/student/student.entity.ts\n            \n            class\n            Student\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/repl.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/student/controllers/student.controller.ts\n            \n            controller\n            StudentsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/student/dto/elector.dto.ts\n            \n            class\n            ElectorDto\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/student/dto/postulant.dto.ts\n            \n            class\n            PostulantDto\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/student/services/student.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/swagger.ts\n            \n            function\n            setupSwagger\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @faker-js/faker : ^8.0.2\n        \n            @nestjs/axios : ^2.0.0\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.2\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/serve-static : ^3.0.1\n        \n            @nestjs/swagger : ^6.3.0\n        \n            @nestjs/terminus : ^9.2.2\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            commander : ^10.0.1\n        \n            compression : ^1.7.4\n        \n            helmet : ^7.0.0\n        \n            nestjs-paginate : ^8.1.4\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            typescript-business-rules-engine : ^1.0.7\n        \n            xlsx : https://cdn.sheetjs.com/xlsx-0.19.3/xlsx-0.19.3.tgz\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MESSAGES   (src/.../messages.ts)\n                        \n                        \n                            Order   (src/.../order.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/utils/response/messages.ts\n    \n        \n            \n                \n                    \n                        \n                        MESSAGES\n                    \n                \n                        \n                            \n                                 CONTINUE\n                            \n                        \n                        \n                            \n                                Value : Continue\n                            \n                        \n                        \n                            \n                                 SWITCHING_PROTOCOLS\n                            \n                        \n                        \n                            \n                                Value : Switching Protocols\n                            \n                        \n                        \n                            \n                                 PROCESSING\n                            \n                        \n                        \n                            \n                                Value : Processing\n                            \n                        \n                        \n                            \n                                 EARLYHINTS\n                            \n                        \n                        \n                            \n                                Value : Early Hints\n                            \n                        \n                        \n                            \n                                 OK\n                            \n                        \n                        \n                            \n                                Value : OK\n                            \n                        \n                        \n                            \n                                 CREATED\n                            \n                        \n                        \n                            \n                                Value : Created\n                            \n                        \n                        \n                            \n                                 ACCEPTED\n                            \n                        \n                        \n                            \n                                Value : Accepted\n                            \n                        \n                        \n                            \n                                 NON_AUTHORITATIVE_INFORMATION\n                            \n                        \n                        \n                            \n                                Value : Non-Authoritative Information\n                            \n                        \n                        \n                            \n                                 NO_CONTENT\n                            \n                        \n                        \n                            \n                                Value : No Content\n                            \n                        \n                        \n                            \n                                 RESET_CONTENT\n                            \n                        \n                        \n                            \n                                Value : Reset Content\n                            \n                        \n                        \n                            \n                                 PARTIAL_CONTENT\n                            \n                        \n                        \n                            \n                                Value : Partial Content\n                            \n                        \n                        \n                            \n                                 AMBIGUOUS\n                            \n                        \n                        \n                            \n                                Value : Ambiguous\n                            \n                        \n                        \n                            \n                                 MOVED_PERMANENTLY\n                            \n                        \n                        \n                            \n                                Value : Moved Permanently\n                            \n                        \n                        \n                            \n                                 FOUND\n                            \n                        \n                        \n                            \n                                Value : Found\n                            \n                        \n                        \n                            \n                                 SEE_OTHER\n                            \n                        \n                        \n                            \n                                Value : See Other\n                            \n                        \n                        \n                            \n                                 NOT_MODIFIED\n                            \n                        \n                        \n                            \n                                Value : Not Modified\n                            \n                        \n                        \n                            \n                                 TEMPORARY_REDIRECT\n                            \n                        \n                        \n                            \n                                Value : Temporary Redirect\n                            \n                        \n                        \n                            \n                                 PERMANENT_REDIRECT\n                            \n                        \n                        \n                            \n                                Value : Permanent Redirect\n                            \n                        \n                        \n                            \n                                 BAD_REQUEST\n                            \n                        \n                        \n                            \n                                Value : Bad Request\n                            \n                        \n                        \n                            \n                                 UNAUTHORIZED\n                            \n                        \n                        \n                            \n                                Value : Unauthorized\n                            \n                        \n                        \n                            \n                                 PAYMENT_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : Payment Required\n                            \n                        \n                        \n                            \n                                 FORBIDDEN\n                            \n                        \n                        \n                            \n                                Value : Forbidden\n                            \n                        \n                        \n                            \n                                 NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : Not Found\n                            \n                        \n                        \n                            \n                                 METHOD_NOT_ALLOWED\n                            \n                        \n                        \n                            \n                                Value : Method Not Allowed\n                            \n                        \n                        \n                            \n                                 NOT_ACCEPTABLE\n                            \n                        \n                        \n                            \n                                Value : Not Acceptable\n                            \n                        \n                        \n                            \n                                 PROXY_AUTHENTICATION_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : Proxy Authentication Required\n                            \n                        \n                        \n                            \n                                 REQUEST_TIMEOUT\n                            \n                        \n                        \n                            \n                                Value : Request Timeout\n                            \n                        \n                        \n                            \n                                 CONFLICT\n                            \n                        \n                        \n                            \n                                Value : Conflict\n                            \n                        \n                        \n                            \n                                 GONE\n                            \n                        \n                        \n                            \n                                Value : Gone\n                            \n                        \n                        \n                            \n                                 LENGTH_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : Length Required\n                            \n                        \n                        \n                            \n                                 PRECONDITION_FAILED\n                            \n                        \n                        \n                            \n                                Value : Precondition Failed\n                            \n                        \n                        \n                            \n                                 PAYLOAD_TOO_LARGE\n                            \n                        \n                        \n                            \n                                Value : Payload Too Large\n                            \n                        \n                        \n                            \n                                 URI_TOO_LONG\n                            \n                        \n                        \n                            \n                                Value : URI Too Long\n                            \n                        \n                        \n                            \n                                 UNSUPPORTED_MEDIA_TYPE\n                            \n                        \n                        \n                            \n                                Value : Unsupported Media Type\n                            \n                        \n                        \n                            \n                                 REQUESTED_RANGE_NOT_SATISFIABLE\n                            \n                        \n                        \n                            \n                                Value : Requested range not satisfiable\n                            \n                        \n                        \n                            \n                                 EXPECTATION_FAILED\n                            \n                        \n                        \n                            \n                                Value : Expectation Failed\n                            \n                        \n                        \n                            \n                                 I_AM_A_TEAPOT\n                            \n                        \n                        \n                            \n                                Value : I'm a teapot\n                            \n                        \n                        \n                            \n                                 MISDIRECTED\n                            \n                        \n                        \n                            \n                                Value : Misdirected\n                            \n                        \n                        \n                            \n                                 UNPROCESSABLE_ENTITY\n                            \n                        \n                        \n                            \n                                Value : Unprocessable Entity\n                            \n                        \n                        \n                            \n                                 FAILED_DEPENDENCY\n                            \n                        \n                        \n                            \n                                Value : Failed Dependency\n                            \n                        \n                        \n                            \n                                 PRECONDITION_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : Precondition Required\n                            \n                        \n                        \n                            \n                                 TOO_MANY_REQUESTS\n                            \n                        \n                        \n                            \n                                Value : Too Many Requests\n                            \n                        \n                        \n                            \n                                 INTERNAL_SERVER_ERROR\n                            \n                        \n                        \n                            \n                                Value : Internal Server Error\n                            \n                        \n                        \n                            \n                                 NOT_IMPLEMENTED\n                            \n                        \n                        \n                            \n                                Value : Not Implemented\n                            \n                        \n                        \n                            \n                                 BAD_GATEWAY\n                            \n                        \n                        \n                            \n                                Value : Bad Gateway\n                            \n                        \n                        \n                            \n                                 SERVICE_UNAVAILABLE\n                            \n                        \n                        \n                            \n                                Value : Service Unavailable\n                            \n                        \n                        \n                            \n                                 GATEWAY_TIMEOUT\n                            \n                        \n                        \n                            \n                                Value : Gateway Timeout\n                            \n                        \n                        \n                            \n                                 HTTP_VERSION_NOT_SUPPORTED\n                            \n                        \n                        \n                            \n                                Value : HTTP Version Not Supported\n                            \n                        \n            \n        \n\n    src/common/constants/order.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        Order\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../app.ts)\n                        \n                        \n                            bootstrap   (src/.../repl.ts)\n                        \n                        \n                            generateFakeStudents   (bin/.../generateFakeStudents.ts)\n                        \n                        \n                            middleware   (src/.../app.middleware.ts)\n                        \n                        \n                            PaginateQueryOptions   (src/.../decorators.ts)\n                        \n                        \n                            randomEnrolledSemester   (bin/.../generateFakeStudents.ts)\n                        \n                        \n                            randomMajor   (bin/.../generateFakeStudents.ts)\n                        \n                        \n                            randomSanction   (bin/.../generateFakeStudents.ts)\n                        \n                        \n                            randomStudent   (bin/.../generateFakeStudents.ts)\n                        \n                        \n                            setupSwagger   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    https://docs.nestjs.com\nhttps://github.com/nestjs/nest/tree/master/sample\nhttps://github.com/nestjs/nest/issues/2249#issuecomment-494734673\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    src/repl.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    https://docs.nestjs.com/recipes/repl\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    bin/generateFakeStudents.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateFakeStudents\n                        \n                    \n                \n            \n            \n                \ngenerateFakeStudents(numStudents: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    numStudents\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomEnrolledSemester\n                        \n                    \n                \n            \n            \n                \nrandomEnrolledSemester(semesterCode: number, currentSemester: boolean, dateBase: Date)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    semesterCode\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentSemester\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dateBase\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EnrolledSemester\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomMajor\n                        \n                    \n                \n            \n            \n                \nrandomMajor()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         Major\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomSanction\n                        \n                    \n                \n            \n            \n                \nrandomSanction()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         Sanction\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomStudent\n                        \n                    \n                \n            \n            \n                \nrandomStudent()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         Student\n\n                    \n                \n            \n        \n    \n    src/app.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        middleware\n                        \n                    \n                \n            \n            \n                \nmiddleware(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     INestApplication\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/common/utils/pagination/decorators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PaginateQueryOptions\n                        \n                    \n                \n            \n            \n                \nPaginateQueryOptions()\n                \n            \n\n\n\n\n        \n    \n    src/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupSwagger\n                        \n                    \n                \n            \n            \n                \nsetupSwagger(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n                    https://docs.nestjs.com/recipes/swagger\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_StudentsModule\n\n\n\ncluster_StudentsModule_providers\n\n\n\n\nBaseModule\n\nBaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBaseModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nStudentsModule\n\nStudentsModule\n\nAppModule -->\n\nStudentsModule->AppModule\n\n\n\n\n\nDataService\n\nDataService\n\nStudentsModule -->\n\nDataService->StudentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : A Typescript rule engine where rules are defined in JSON format.\n        \n            Keywords : business, rules, engine, typescript, json\n        \n            Homepage : https://github.com/Carlososuna11/business-rules-backend#readme\n        \n            Bugs : https://github.com/Carlososuna11/business-rules-backend/issues\n        \n            License : GPLV3\n        \n            Repository : git+https://github.com/Carlososuna11/business-rules-backend.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Config   (src/.../config.interface.ts)\n                        \n                        \n                            Default   (src/.../config.interface.ts)\n                        \n                        \n                            Objectype   (src/.../config.interface.ts)\n                        \n                        \n                            Production   (src/.../config.interface.ts)\n                        \n                        \n                            TemplateParameter   (src/.../util.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Config\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Default\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Objectype\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Production\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/common/providers/util.service.ts\n    \n    \n        \n            \n                \n                    \n                    TemplateParameter\n                \n            \n            \n                \n                        any[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiPaginatedResponse   (src/.../decorators.ts)\n                        \n                        \n                            config   (src/.../default.ts)\n                        \n                        \n                            config   (src/.../development.ts)\n                        \n                        \n                            config   (src/.../production.ts)\n                        \n                        \n                            config   (src/.../test.ts)\n                        \n                        \n                            configuration   (src/.../configuration.ts)\n                        \n                        \n                            currentSemesterUC   (bin/.../generateFakeStudents.ts)\n                        \n                        \n                            exportContext   (src/.../index.ts)\n                        \n                        \n                            importContext   (src/.../index.ts)\n                        \n                        \n                            ingressStatus   (bin/.../generateFakeStudents.ts)\n                        \n                        \n                            major   (bin/.../generateFakeStudents.ts)\n                        \n                        \n                            program   (bin/.../generateFakeStudents.ts)\n                        \n                        \n                            semester   (bin/.../generateFakeStudents.ts)\n                        \n                        \n                            services   (src/.../common.module.ts)\n                        \n                        \n                            URLS   (src/.../urls.ts)\n                        \n                        \n                            util   (src/.../configuration.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/utils/pagination/decorators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(model: TModel) => {\n\treturn applyDecorators(\n\t\tApiOkResponse({\n\t\t\tschema: {\n\t\t\t\tproperties: {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\titems: { $ref: getSchemaPath(model) },\n\t\t\t\t\t},\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\titemsPerPage: {\n\t\t\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttotalItems: {\n\t\t\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcurrentPage: {\n\t\t\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttotalPages: {\n\t\t\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsortBy: {\n\t\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsearchBy: {\n\t\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsearch: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfilter: {\n\t\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\t\tproperties: {},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tlinks: {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tfirst: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tprevious: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcurrent: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnext: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tlast: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t);\n}\n                    \n                \n\n\n        \n    \n\n    src/config/envs/default.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tbackendHost: 'http://localhost:3000',\n\thello: 'world',\n}\n                    \n                \n\n\n        \n    \n\n    src/config/envs/development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tbackendHost: process.env.BACKEND_HOST || 'http://localhost:3000',\n\tfoo: 'dev-bar',\n}\n                    \n                \n\n\n        \n    \n\n    src/config/envs/production.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tbackendHost: process.env.BACKEND_HOST || 'http://localhost:3000',\n\tfoo: 'dev-bar',\n}\n                    \n                \n\n\n        \n    \n\n    src/config/envs/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tbackendHost: process.env.BACKEND_HOST || 'http://localhost:3000',\n\tfoo: 'dev-bar',\n}\n                    \n                \n\n\n        \n    \n\n    src/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (): Promise => {\n\tconst { config } = await import(`${__dirname}/envs/default`);\n\tconst { config: environment } = (\n\t\tawait import(`${__dirname}/envs/${process.env.NODE_ENV || 'development'}`)\n\t);\n\n\t// object deep merge\n\treturn util.merge(config, environment);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        util\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tisObject(value: T): value is T & Objectype {\n\t\treturn value !== null && typeof value === 'object' && !Array.isArray(value);\n\t},\n\tmerge(target: T, source: U): T & U {\n\t\tfor (const key of Object.keys(source)) {\n\t\t\tconst targetValue = target[key];\n\t\t\tconst sourceValue = source[key];\n\t\t\tif (this.isObject(targetValue) && this.isObject(sourceValue)) {\n\t\t\t\tObject.assign(sourceValue, this.merge(targetValue, sourceValue));\n\t\t\t}\n\t\t}\n\n\t\treturn { ...target, ...source };\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    bin/generateFakeStudents.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        currentSemesterUC\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\t{ semester: 1, value: 0, years: 0 },\n\t{ semester: 2, value: 25, years: 1 },\n\t{ semester: 3, value: 50, years: 1 },\n\t{ semester: 4, value: 77, years: 2 },\n\t{ semester: 5, value: 109, years: 2 },\n\t{ semester: 6, value: 170, years: 3 },\n\t{ semester: 7, value: 204, years: 3 },\n\t{ semester: 8, value: 229, years: 4 },\n\t{ semester: 9, value: 259, years: 4 },\n\t{ semester: 9, value: 297, years: 5 },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingressStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\t{ name: 'Retiro Retroactivo', value: 'DR' },\n\t{ name: 'Retiro Total', value: 'DT' },\n\t{ name: 'Inscripción Regular', value: 'IR' },\n\t{ name: 'Inscripción Extemporánea', value: 'IE' },\n\t{ name: 'Inscripción Tardía', value: 'IT' },\n\t{ name: 'Modificación de Inscripción', value: 'MI' },\n\t{ name: 'Tesis de Grado', value: 'TG' },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        major\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\t{ name: 'Ingeniería Informática', value: 'IINF', facultyCode: 'FING', years: 5 },\n\t{ name: 'Ingeniería Civil', value: 'ICIV', facultyCode: 'FING', years: 5 },\n\t{ name: 'Ingeniería Industrial', value: 'IIND', facultyCode: 'FING', years: 5 },\n\t{ name: 'Ingeniería Telecomunicaciones', value: 'ITEL', facultyCode: 'FING', years: 5 },\n\t{ name: 'Arquitectura', value: 'ARQ', facultyCode: 'FING', years: 5 },\n\t{ name: 'Filosofía', value: 'FIL', facultyCode: 'FAHD', years: 4 },\n\t{ name: 'Psicología', value: 'PSI', facultyCode: 'FAHD', years: 5 },\n\t{ name: 'Letras', value: 'LET', facultyCode: 'FAHD', years: 4 },\n\t{ name: 'Comunicación Social', value: 'COM', facultyCode: 'FAHD', years: 5 },\n\t{ name: 'Educación', value: 'EDU', facultyCode: 'FAHD', years: 4 },\n\t{ name: 'Administración de Empresas', value: 'ADE', facultyCode: 'FACES', years: 5 },\n\t{ name: 'Contaduría Pública', value: 'CON', facultyCode: 'FACES', years: 5 },\n\t{ name: 'Relaciones Industriales', value: 'RIN', facultyCode: 'FACES', years: 4 },\n\t{ name: 'Sociología', value: 'SOC', facultyCode: 'FACES', years: 4 },\n\t{ name: 'Economía', value: 'ECO', facultyCode: 'FACES', years: 4 },\n\t{ name: 'Derecho', value: 'DER', facultyCode: 'FDER', years: 5 },\n\t{ name: 'Teología', value: 'TEO', facultyCode: 'FTEO', years: 5 },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        program\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Command()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        semester\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\t{ name: 'Primer Semestre', value: 1 },\n\t{ name: 'Segundo Semestre', value: 2 },\n\t{ name: 'Tercer Semestre', value: 3 },\n\t{ name: 'Cuarto Semestre', value: 4 },\n\t{ name: 'Quinto Semestre', value: 5 },\n\t{ name: 'Sexto Semestre', value: 6 },\n\t{ name: 'Séptimo Semestre', value: 7 },\n\t{ name: 'Octavo Semestre', value: 8 },\n\t{ name: 'Noveno Semestre', value: 9 },\n\t{ name: 'Décimo Semestre', value: 10 },\n]\n                    \n                \n\n\n        \n    \n\n    src/common/utils/context/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        exportContext\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (context: object, path: string, name: string) => {\n\tconst fileName = `${path}/${name}.json`;\n\n\ttry {\n\t\tconst file = await fs.open(fileName, 'w');\n\t\tawait file.writeFile(JSON.stringify(context));\n\t\tawait file.close();\n\t} catch (err) {\n\t\tthrow new Error(err);\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        importContext\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (path: string, name: string) => {\n\tconst fileName = `${path}/${name}.json`;\n\n\ttry {\n\t\tconst file = await fs.open(fileName, 'r');\n\t\tconst data = await file.readFile('utf-8');\n\t\tawait file.close();\n\t\treturn data;\n\t} catch (err) {\n\t\tthrow new Error(err);\n\t}\n}\n                    \n                \n\n\n        \n    \n\n    src/common/common.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        services\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(providers)\n                    \n                \n\n\n        \n    \n\n    src/common/constants/urls.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        URLS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tSTUDENTS: {\n\t\tbase: 'api/students',\n\t\telectors: 'api/students/electors',\n\t\tpostulants: 'api/students/postulants',\n\t\tuploadEngineElectors: 'api/students/electors/upload-engine',\n\t\tuploadEnginePostulants: 'api/students/postulants/upload-engine',\n\t},\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
